{"version":3,"file":"static/js/330.542ddabb.chunk.js","mappings":"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","sources":["webpack://health/./src/components/Calculator/Calculator.module.css?7770","webpack://health/./src/components/WeightLossForm/WeightLossForm.module.css?c660","components/WeightLossForm/WeightLossForm.jsx","components/Calculator/Calculator.jsx","webpack://health/./src/components/LoginStatistics/LoginStatistics.module.css?05df","components/LoginStatistics/LoginStatistics.jsx","webpack://health/./src/components/commonComponents/Input/Input.module.css?389e","components/commonComponents/Input/Input.jsx","redux/public/selectorsPublic.js","hooks/usePublic.js","webpack://health/./src/pages/CalculatorPage/CalculatorPage.module.css?9a12","pages/CalculatorPage/CalculatorPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cont\":\"Calculator_cont__hof16\",\"title\":\"Calculator_title__0VU03\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"WeightLossForm_form__vXQGd\",\"formMainCont\":\"WeightLossForm_formMainCont__iwbqv\",\"formLeftCont\":\"WeightLossForm_formLeftCont__NE+NA\",\"formRightCont\":\"WeightLossForm_formRightCont__FzY75\",\"bloodTypeContainer\":\"WeightLossForm_bloodTypeContainer__Ooi9f\",\"label\":\"WeightLossForm_label__OkR4d\",\"radioGroup\":\"WeightLossForm_radioGroup__ixH+l\",\"radioInput\":\"WeightLossForm_radioInput__qHjLL\",\"radioLabel\":\"WeightLossForm_radioLabel__FW6g2\",\"errorMessage\":\"WeightLossForm_errorMessage__pIDNO\",\"link\":\"WeightLossForm_link__1VjI+\"};","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Input from \"../commonComponents/Input/Input\";\nimport Button from \"../commonComponents/Button\";\n\nimport { setFormData } from \"../../redux/public/publicCalculatorSlice\";\nimport { usePublic } from \"../../hooks/usePublic\";\n\nimport { setPrivateFormData } from '../../redux/private/privateSlice'\nimport { usePrivate } from \"../../hooks/usePrivate\";\n\nimport { useAuth } from \"../../hooks/useAuth\";\n\nimport styles from \"./WeightLossForm.module.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { logOut } from \"../../redux/auth/operationsAuth\";\nimport { useDispatch } from \"react-redux\";\n\nconst bloodTypeOptions = [\n    { value: \"1\", label: \"A\" },\n    { value: \"2\", label: \"B\" },\n    { value: \"3\", label: \"AB\" },\n    { value: \"4\", label: \"O\" },\n];\n\nexport default function WeightLossForm({ onSubmit, handleClick }) {\n    const { formData = {}, isLoading, errorPublic, dispatch } = usePublic();\n    const { privateFormData = {}, privateLoading, error, privateDispatch } = usePrivate()\n    const { isLoggedIn } = useAuth()\n    // console.log(isLoggedIn);\n    // console.log(privateLoading);\n    // console.log(privateFormData);\n\n    const thisDispatch = useDispatch()\n    const navigate = useNavigate();\n\n\n\n    // Initialize form state with default values\n    useEffect(() => {\n        const defaultValues = {\n            height: \"\",\n            age: \"\",\n            currentWeight: \"\",\n            desiredWeight: \"\",\n            bloodGroupIndex: \"\",\n        };\n\n        const setter = isLoggedIn ? privateDispatch : dispatch;\n        const setAction = isLoggedIn ? setPrivateFormData : setFormData;\n\n        Object.entries(defaultValues).forEach(([key, value]) => {\n            if (!isLoggedIn && !formData[key]) {\n                setter(setAction({ name: key, value }));\n            }\n            if (isLoggedIn && !privateFormData[key]) {\n                setter(setAction({ name: key, value }));\n            }\n        });\n    }, [dispatch, privateDispatch, formData, privateFormData, isLoggedIn]);\n\n    useEffect(() => {\n        if (error === \"Not authorized\") {\n            setTimeout(() => navigate(\"/login\"), 2000); // Auto-redirect after 2 seconds\n        }\n    }, [error, navigate]);\n\n    // console.log(formData);\n\n\n    // Check if all form fields are valid\n    const isValid = Object.values(isLoggedIn ? privateFormData : formData).every(\n        (field) => field?.toString().trim() !== \"\"\n    );\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        !isLoggedIn\n            ? dispatch(setFormData({ name, value }))\n            : privateDispatch(setPrivateFormData({ name, value }));\n    };\n\n    const handleRadioChange = (value) => {\n        !isLoggedIn\n            ? dispatch(setFormData({ name: \"bloodGroupIndex\", value }))\n            : privateDispatch(setPrivateFormData({ name: \"bloodGroupIndex\", value }));\n    };\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const dataToSubmit = isLoggedIn ? privateFormData : formData;\n        if (isValid) {\n            onSubmit(dataToSubmit);\n        }\n    };\n\n    const handleLogout = () => {\n        thisDispatch(logOut())\n        setTimeout(() => { navigate(\"/login\") }, 500);\n    }\n\n    const height = !isLoggedIn ? formData.height : privateFormData.height\n    const age = !isLoggedIn ? formData.age : privateFormData.age\n    const currentWeight = !isLoggedIn ? formData.currentWeight : privateFormData.currentWeight\n    const desiredWeight = !isLoggedIn ? formData.desiredWeight : privateFormData.desiredWeight\n    const bloodGroupIndex = !isLoggedIn ? formData.bloodGroupIndex : privateFormData.bloodGroupIndex\n    const loading = !isLoggedIn ? isLoading : privateLoading\n    const isError = !isLoggedIn ? errorPublic : error\n\n\n    return (\n        <form onSubmit={handleSubmit} className={styles.form}>\n            {isError && <div className={styles.errorMessage}>{(isError === 'Not authorized') ? <div className={styles.errorMessage}>\n                <p>\n                    Your authorisation has expired please retry to :\n                </p>\n                <Button onClick={handleLogout}>\n                    Login\n                </Button>\n            </div> : isError}\n            </div>}\n\n            <div className={styles.formMainCont}>\n                {/* Left Section */}\n                <div className={styles.formLeftCont}>\n                    <Input\n                        type=\"number\"\n                        placeholder=\"Height*\"\n                        name=\"height\"\n                        value={height || \"\"}\n                        handleChange={handleChange}\n                        required\n                    />\n\n                    <Input\n                        type=\"number\"\n                        placeholder=\"Age*\"\n                        name=\"age\"\n                        value={age || \"\"}\n                        handleChange={handleChange}\n                        required\n                    />\n\n                    <Input\n                        type=\"number\"\n                        placeholder=\"Current weight*\"\n                        name=\"currentWeight\"\n                        value={currentWeight || \"\"}\n                        handleChange={handleChange}\n                        required\n                    />\n                </div>\n\n                {/* Right Section */}\n                <div className={styles.formRightCont}>\n                    <Input\n                        type=\"number\"\n                        placeholder=\"Desired weight*\"\n                        name=\"desiredWeight\"\n                        value={desiredWeight || \"\"}\n                        handleChange={handleChange}\n                        required\n                    />\n\n                    <div className={styles.bloodTypeContainer}>\n                        <label className={styles.label}></label>\n\n                        {/* Read-Only Input */}\n                        <Input\n                            type=\"text\"\n                            placeholder=\"Blood type*\"\n                            name=\"bloodType\"\n                            value={bloodTypeOptions.find((opt) => opt.value === bloodGroupIndex)?.label || \"\"}\n                            handleChange={handleChange}\n                            required\n                            readOnly\n                        />\n\n                        {/* Radio Buttons */}\n                        <div className={styles.radioGroup}>\n                            {bloodTypeOptions.map((option) => (\n                                <React.Fragment key={option.value}>\n                                    <input\n                                        type=\"radio\"\n                                        id={`bloodType-${option.value}`}\n                                        name=\"bloodType\"\n                                        value={option.value}\n                                        checked={bloodGroupIndex === option.value}\n                                        onChange={() => handleRadioChange(option.value)}\n                                        className={styles.radioInput}\n                                    />\n                                    <label htmlFor={`bloodType-${option.value}`} className={styles.radioLabel}>\n                                        {option.label}\n                                    </label>\n                                </React.Fragment>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <Button handleClick={handleClick} type=\"submit\" variant=\"colored\" disabled={!isValid || loading}>\n                {loading ? \"Loading...\" : \"Start losing weight\"}\n            </Button>\n        </form>\n    );\n}\n\nWeightLossForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    handleClick: PropTypes.func,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Calculator.module.css\";\nimport WeightLossForm from \"../WeightLossForm/WeightLossForm\";\n\nexport default function Calculator({ onSubmit, handleClick }) {\n    return (\n        <div className={styles.cont}>\n            <h2 className={styles.title}>\n                Calculate your daily calorie intake right now\n            </h2>\n\n            <WeightLossForm handleClick={handleClick} onSubmit={onSubmit} />\n        </div>\n    );\n}\n\nCalculator.propTypes = {\n    onSubmit: PropTypes.func.isRequired, // Ensure onSubmit is provided as a prop\n    handleClick: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"resultsCont\":\"LoginStatistics_resultsCont__bSZ00\",\"statisticCont\":\"LoginStatistics_statisticCont__W4sUJ\",\"resultsToday\":\"LoginStatistics_resultsToday__5XOvn\",\"statisticList\":\"LoginStatistics_statisticList__-K1dG\",\"statisticListItem\":\"LoginStatistics_statisticListItem__jwFY5\",\"statisticListItemSpan\":\"LoginStatistics_statisticListItemSpan__5hv5z\",\"notRecommendedCont\":\"LoginStatistics_notRecommendedCont__AujTB\",\"notRecommendedTitle\":\"LoginStatistics_notRecommendedTitle__xTGyK\",\"notRecommendedList\":\"LoginStatistics_notRecommendedList__H-Mel\",\"notRecommendedEmpty\":\"LoginStatistics_notRecommendedEmpty__2+pc3\",\"statisticSuperCont\":\"LoginStatistics_statisticSuperCont__yyZZY\",\"notRecommendedListItem\":\"LoginStatistics_notRecommendedListItem__0vXlq\"};","import React from 'react'\nimport PropTypes from \"prop-types\";\n\nimport { useMediaQuery } from \"react-responsive\";\nimport UserLogout from '../UserLogout/UserLogout';\nimport { useAuth } from '../../hooks/useAuth';\nimport { usePrivate } from '../../hooks/usePrivate';\n\nimport styles from './LoginStatistics.module.css'\n\nconst breakpoints = {\n    mobile: \"(max-width: 767px)\",\n    tablet: \"(min-width:768px)\",\n    desktop: \"(min-width:1024px)\",\n};\n\nfunction LoginStatistics({ day }) {\n    const isDesktop = useMediaQuery({ query: breakpoints.desktop });\n    const { user } = useAuth()\n    const { dailyCalorieSummary } = usePrivate()\n\n    // Validate the format dd-mm-yyyy\n    const isValidDate = /^\\d{2}.\\d{2}.\\d{4}$/.test(day);\n    if (!isValidDate) {\n        console.error(`Invalid date format: ${day}. Expected dd.mm.yyyy.`);\n    }\n\n    return (\n        <div className={styles.resultsCont}>\n            {isDesktop && <UserLogout />}\n            <div className={styles.statisticSuperCont}>\n                <div className={styles.statisticCont}>\n                    <p className={styles.resultsToday}>Summary for {day}</p>\n                    <ul className={styles.statisticList}>\n                        <li key=\"left\" className={styles.statisticListItem}>\n                            <span className={styles.statisticListItemSpan}>\n                                Left\n                            </span>\n                            <span className={styles.statisticListItemSpan}>\n                                {dailyCalorieSummary?.remainingCalories !== 0 ? dailyCalorieSummary.remainingCalories : '000'} kcal\n                            </span>\n                        </li>\n                        <li key=\"consumed\" className={styles.statisticListItem}>\n                            <span className={styles.statisticListItemSpan}>\n                                Consumed\n                            </span>\n                            <span className={styles.statisticListItemSpan}>\n                                {dailyCalorieSummary?.totalCaloriesConsumed > 0 ? dailyCalorieSummary.totalCaloriesConsumed : '000'} kcal\n                            </span>\n                        </li>\n                        <li key=\"daily\" className={styles.statisticListItem}>\n                            <span className={styles.statisticListItemSpan}>\n                                Daily rate\n                            </span>\n                            <span className={styles.statisticListItemSpan}>\n                                {dailyCalorieSummary?.dailyCalorieIntake > 0 ? dailyCalorieSummary.dailyCalorieIntake : '000'} kcal\n                            </span>                    </li>\n                        <li key=\"normal\" className={styles.statisticListItem}>\n                            <span className={styles.statisticListItemSpan}>\n                                n% of normal\n                            </span>\n                            <span className={styles.statisticListItemSpan}>\n                                {dailyCalorieSummary?.percentageCaloriesConsumed > 0 ? dailyCalorieSummary.percentageCaloriesConsumed : '0'} %\n                            </span>                    </li>\n                    </ul>\n                </div>\n                <div className={styles.notRecommendedCont}>\n                    <p className={styles.notRecommendedTitle}>\n                        Food not recommended\n                    </p>\n                    {user?.dietaryInfo?.restrictedAliments?.length > 0 ? (\n                        <ul className={styles.notRecommendedList}>\n                            {user.dietaryInfo.restrictedAliments.map((aliment) => (\n                                <li key={aliment?._id} className={styles.notRecommendedListItem}>\n                                    {aliment.title}\n                                </li>\n                            ))}\n                        </ul>\n                    ) : (\n                        <p className={styles.notRecommendedEmpty}>\n                            Your diet will be displayed here\n                        </p>\n                    )}\n                </div>\n            </div>\n        </div>)\n}\n\nLoginStatistics.propTypes = {\n    day: PropTypes.string.isRequired,\n};\n\nexport default LoginStatistics;","// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"Input_inputContainer__QZk4R\",\"input\":\"Input_input__MJJzI\",\"inputCenter\":\"Input_inputCenter__pFBIS\",\"inputInfo\":\"Input_inputInfo__z+ueb\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\n\nimport styles from \"./Input.module.css\";\n\nexport default function Input({\n  type,\n  placeholder,\n  required,\n  variant = \"\",\n  className,\n  name,\n  handleChange,\n  width,\n  value,\n  paddingLeft,\n  autoComplete,\n  handleBlur,\n}) {\n  return (\n    <div style={{ width: width || \"auto\" }} className={styles.inputContainer}>\n      <input\n        autoComplete={autoComplete || \"off\"}\n        style={{ paddingLeft: paddingLeft || \"0px\" }}\n        onChange={handleChange}\n        name={name || \"\"}\n        className={clsx(\n          styles.input,\n          className,\n          variant === \"center\" ? styles.inputCenter : styles.input\n        )}\n        type={type || \"text\"}\n        placeholder={placeholder || \"\"}\n        required={required || false}\n        value={value || \"\"}\n        onBlur={handleBlur}\n      />\n    </div>\n  );\n}\n\nInput.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  paddingLeft: PropTypes.string,\n  autoComplete: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  name: PropTypes.string,\n  type: PropTypes.string,\n  variant: PropTypes.string,\n  handleChange: PropTypes.func,\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  placeholder: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n","import { createSelector } from \"reselect\";\n\n// Basic selector to get the slice of state\nconst selectPublicCalculatorState = (state) => state.publicCalculatorSlice;\n\n// Memoized selector for formData\nexport const selectFormData = createSelector(\n    [selectPublicCalculatorState],\n    (publicCalculatorSlice) => ({\n        height: publicCalculatorSlice.height,\n        age: publicCalculatorSlice.age,\n        currentWeight: publicCalculatorSlice.currentWeight,\n        desiredWeight: publicCalculatorSlice.desiredWeight,\n        bloodGroupIndex: publicCalculatorSlice.bloodGroupIndex,\n    })\n);\n\nexport const selectResult = (state) => state.publicCalculatorSlice.result;\nexport const selectLoading = (state) => state.publicCalculatorSlice.loading;\nexport const selectError = (state) => state.publicCalculatorSlice.error;\nexport const selectProducts = (state) => state.publicCalculatorSlice.products;\nexport const selectProduct = (state) => state.publicCalculatorSlice.product;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n    selectError,\n    selectFormData,\n    selectLoading,\n    selectResult,\n    selectProducts,\n    selectProduct,\n} from \"../redux/public/selectorsPublic\";\n\nexport const usePublic = () => {\n    const dispatch = useDispatch(); // Add dispatch for triggering actions\n    const formData = useSelector(selectFormData);\n    const isLoading = useSelector(selectLoading);\n    const errorPublic = useSelector(selectError);\n    const result = useSelector(selectResult);\n    const products = useSelector(selectProducts);\n    const product = useSelector(selectProduct);\n\n    return {\n        formData,\n        isLoading,\n        errorPublic,\n        result,\n        products,\n        product,\n        dispatch, // Include dispatch in the returned object\n    };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"CalculatorPage_section__Wyr9N\",\"calculatorCont\":\"CalculatorPage_calculatorCont__mxIJs\",\"leftCont\":\"CalculatorPage_leftCont__dplUt\"};","import React, { useEffect } from 'react'\nimport { useMediaQuery } from \"react-responsive\";\n\nimport { useLocation } from \"react-router-dom\";\nimport Calculator from '../../components/Calculator/Calculator';\nimport { useDispatch } from 'react-redux';\n\nimport { fetchPrivateCalculationData, fetchConsumedProductsForSpecificDay } from '../../redux/private/operationsPrivate'\n\nimport Logo from '../../components/Logo/Logo';\nimport NavLinks from '../../components/NavLinks/NavLinks';\n\nimport LoginStatistics from '../../components/LoginStatistics/LoginStatistics';\nimport { usePrivate } from '../../hooks/usePrivate';\n\nimport styles from './CalculatorPage.module.css'\n\nconst breakpoints = {\n    mobile: \"(max-width: 767px)\",\n    tablet: \"(min-width:768px)\",\n    desktop: \"(min-width:1024px)\",\n};\n\nexport default function CalculatorPage() {\n    useLocation();\n\n    const isDesktop = useMediaQuery({ query: breakpoints.desktop });\n\n    const { privateDispatch } = usePrivate();\n    const dispatch = useDispatch();\n\n    const today = getFormattedDate()\n\n    useEffect(() => {\n        const today = getFormattedDate(); // Ensure the correct format YYYY-MM-DD\n        // console.log(\"Fetching data for date:\", today);\n\n        dispatch(fetchConsumedProductsForSpecificDay({ date: today })); // Pass as an object\n    }, [dispatch]);\n\n    function getFormattedDate() {\n        const today = new Date();\n        const year = today.getFullYear();\n        const month = String(today.getMonth() + 1).padStart(2, '0'); // Add leading zero if needed\n        const day = String(today.getDate()).padStart(2, '0'); // Add leading zero if needed\n        return `${year}-${month}-${day}`; // Return in YYYY-MM-DD format\n    }\n\n    const handleClick = () => {\n        dispatch(fetchConsumedProductsForSpecificDay({ date: today })); // Pass as an object\n        // dispatch(refreshUser())\n    }\n\n\n    // console.log(getFormattedDate());\n\n    // Function to handle form submission\n    const handleSubmit = (formData) => {\n        dispatch(fetchPrivateCalculationData(formData));\n    };\n\n    function formatToDisplayDate(date) {\n        const [year, month, day] = date.split(\"-\");\n        return `${day}.${month}.${year}`;\n    }\n\n    function handleProductsForSelectedDate(date) {\n        setTimeout(() => {\n            privateDispatch(fetchConsumedProductsForSpecificDay({ date: date }));\n        }, 1000); // Delay of 500ms\n    };\n\n    return (\n        <section className={styles.section}>\n            <div className={styles.calculatorCont}>\n                {isDesktop && (<div className={styles.leftCont}>\n                    <Logo />\n                    <NavLinks />\n                </div>)}\n                <Calculator handleClick={() => {\n                    handleClick();\n                    handleSubmit();\n                    handleProductsForSelectedDate(today)\n                }} onSubmit={handleSubmit} />\n            </div>\n            <LoginStatistics day={formatToDisplayDate(today)} />\n        </section>\n    )\n}\n"],"names":["bloodTypeOptions","value","label","WeightLossForm","_ref","_bloodTypeOptions$fin","onSubmit","handleClick","formData","isLoading","errorPublic","dispatch","usePublic","privateFormData","privateLoading","error","privateDispatch","usePrivate","isLoggedIn","useAuth","thisDispatch","useDispatch","navigate","useNavigate","useEffect","setter","setAction","setPrivateFormData","setFormData","Object","entries","height","age","currentWeight","desiredWeight","bloodGroupIndex","forEach","_ref2","key","name","setTimeout","isValid","values","every","field","toString","trim","handleChange","e","target","loading","isError","_jsxs","preventDefault","className","styles","form","children","_jsx","errorMessage","Button","onClick","handleLogout","logOut","formMainCont","formLeftCont","Input","type","placeholder","required","formRightCont","bloodTypeContainer","find","opt","readOnly","radioGroup","map","option","React","id","checked","onChange","handleRadioChange","radioInput","htmlFor","radioLabel","variant","disabled","Calculator","cont","title","breakpoints","_user$dietaryInfo","_user$dietaryInfo$res","day","isDesktop","useMediaQuery","query","user","dailyCalorieSummary","test","console","UserLogout","remainingCalories","totalCaloriesConsumed","dailyCalorieIntake","percentageCaloriesConsumed","dietaryInfo","restrictedAliments","length","aliment","_id","width","paddingLeft","autoComplete","handleBlur","style","inputContainer","clsx","input","inputCenter","onBlur","selectFormData","createSelector","state","publicCalculatorSlice","selectResult","result","selectLoading","selectError","selectProducts","products","selectProduct","product","useSelector","mobile","tablet","desktop","CalculatorPage","useLocation","today","getFormattedDate","Date","getFullYear","String","getMonth","padStart","getDate","fetchConsumedProductsForSpecificDay","date","handleSubmit","fetchPrivateCalculationData","section","calculatorCont","leftCont","Logo","NavLinks","LoginStatistics","year","month","split","formatToDisplayDate"],"sourceRoot":""}