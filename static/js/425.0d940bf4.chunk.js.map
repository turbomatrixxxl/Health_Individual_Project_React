{"version":3,"file":"static/js/425.0d940bf4.chunk.js","mappings":"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","sources":["webpack://health/./src/components/commonComponents/Input/Input.module.css?389e","components/commonComponents/Input/Input.jsx","hooks/useFormTouched.js","hooks/useFormValidation.js","hooks/validateRegister.js","hooks/usePasswordStrength.js","webpack://health/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","webpack://health/./src/pages/RegisterPage/RegisterPage.module.css?fdcb","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"Input_inputContainer__hOC7a\",\"input\":\"Input_input__1YKG2\",\"inputCenter\":\"Input_inputCenter__eBcCf\",\"inputInfo\":\"Input_inputInfo__-HLSG\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\n\r\nimport styles from \"./Input.module.css\";\r\n\r\nexport default function Input({\r\n  type,\r\n  placeholder,\r\n  required,\r\n  variant = \"\",\r\n  className,\r\n  name,\r\n  handleChange,\r\n  width,\r\n  value,\r\n  paddingLeft,\r\n  autoComplete,\r\n  handleBlur,\r\n}) {\r\n  return (\r\n    <div style={{ width: width || \"auto\" }} className={styles.inputContainer}>\r\n      <input\r\n        autoComplete={autoComplete || \"off\"}\r\n        style={{ paddingLeft: paddingLeft || \"0px\" }}\r\n        onChange={handleChange}\r\n        name={name || \"\"}\r\n        className={clsx(\r\n          styles.input,\r\n          className,\r\n          variant === \"center\" ? styles.inputCenter : styles.input\r\n        )}\r\n        type={type || \"text\"}\r\n        placeholder={placeholder || \"\"}\r\n        required={required || false}\r\n        value={value || \"\"}\r\n        onBlur={handleBlur}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nInput.propTypes = {\r\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  paddingLeft: PropTypes.string,\r\n  autoComplete: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  name: PropTypes.string,\r\n  type: PropTypes.string,\r\n  variant: PropTypes.string,\r\n  handleChange: PropTypes.func,\r\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  placeholder: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n};\r\n","import { useState } from \"react\";\r\n\r\nconst useFormTouched = (initialState = {}) => {\r\n  const [touched, setTouched] = useState(\r\n    Object.keys(initialState).reduce((acc, key) => {\r\n      acc[key] = false;\r\n      return acc;\r\n    }, {})\r\n  );\r\n\r\n  const handleBlur = (field) => () => {\r\n    setTouched((prev) => ({ ...prev, [field]: true }));\r\n  };\r\n\r\n  return {\r\n    touched,\r\n    handleBlur,\r\n  };\r\n};\r\n\r\nexport default useFormTouched;\r\n","import { useState } from \"react\";\r\n\r\nconst useFormValidation = (initialState, validateFn) => {\r\n  const [fields, setFields] = useState(initialState);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validateFields = () => {\r\n    const newErrors = validateFn(fields);\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  return {\r\n    fields,\r\n    setFields,\r\n    errors,\r\n    validateFields,\r\n  };\r\n};\r\n\r\nexport default useFormValidation;\r\n","const validateRegister = (fields) => {\r\n    const newErrors = {};\r\n    if (!fields.username) {\r\n        newErrors.username = \"Username is required\";\r\n    }\r\n    if (fields.password.length < 6) {\r\n        newErrors.password = \"Password must be at least 6 characters!\";\r\n    }\r\n    if (!fields.email) {\r\n        newErrors.email = \"Email is required\";\r\n    }\r\n    if (!fields.password) {\r\n        newErrors.password = \"Password is required\";\r\n    }\r\n\r\n    return newErrors;\r\n};\r\n\r\nexport default validateRegister;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst usePasswordStrength = (password) => {\r\n  const [strength, setStrength] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const calculatePasswordStrength = (password) => {\r\n      let strength = 0;\r\n\r\n      if (password.length > 7) strength += 1;\r\n      if (password.length > 10) strength += 1;\r\n      if (/[A-Z]/.test(password)) strength += 1;\r\n      if (/[0-9]/.test(password)) strength += 1;\r\n      if (/[^A-Za-z0-9]/.test(password)) strength += 1;\r\n\r\n      return strength;\r\n    };\r\n\r\n    setStrength(calculatePasswordStrength(password));\r\n  }, [password]);\r\n\r\n  return strength;\r\n};\r\n\r\nexport default usePasswordStrength;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__XjW8M\",\"input\":\"RegisterForm_input__XXje9\",\"inputs\":\"RegisterForm_inputs__OFFDd\",\"inputWrapper\":\"RegisterForm_inputWrapper__Xsbly\",\"inputError\":\"RegisterForm_inputError__21CVr\",\"inputIcon\":\"RegisterForm_inputIcon__gbUUN\",\"eyeIcon\":\"RegisterForm_eyeIcon__wUTKD\",\"error\":\"RegisterForm_error__puWIV\",\"buttonsContainer\":\"RegisterForm_buttonsContainer__czd+g\",\"navLink\":\"RegisterForm_navLink__qiIc+\",\"passwordStrengthBar\":\"RegisterForm_passwordStrengthBar__9wJuS\",\"passwordStrengthIndicator\":\"RegisterForm_passwordStrengthIndicator__CF2FC\"};","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { register } from \"../../redux/auth/operationsAuth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEnvelope, faLock, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Input from \"../commonComponents/Input/Input\";\r\nimport Button from \"../commonComponents/Button\";\r\nimport useToggle from \"../../hooks/useToggle\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { VscEye, VscEyeClosed } from \"react-icons/vsc\";\r\nimport useFormValidation from \"../../hooks/useFormValidation\";\r\nimport validateRegister from \"../../hooks/validateRegister\";\r\nimport useFormTouched from \"../../hooks/useFormTouched\";\r\nimport usePasswordStrength from \"../../hooks/usePasswordStrength\";\r\nimport styles from \"./RegisterForm.module.css\";\r\n\r\nfunction RegisterForm() {\r\n  const { fields, setFields, validateFields } = useFormValidation(\r\n    {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      passwordConfirm: \"\",\r\n    },\r\n    validateRegister\r\n  );\r\n\r\n  const { touched, handleBlur } = useFormTouched();\r\n  const passwordStrength = usePasswordStrength(fields.password);\r\n\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const [type, setType] = useState(\"password\");\r\n  const [eyeVisible, toggleEyeVisible] = useToggle(true);\r\n  const [closedEyeVisible, toggleClosedEyeVisible] = useToggle(false);\r\n\r\n  const [confirmType, setConfirmType] = useState(\"password\");\r\n  const [confirmEyeVisible, toggleConfirmEyeVisible] = useToggle(true);\r\n  const [confirmClosedEyeVisible, toggleConfirmClosedEyeVisible] =\r\n    useToggle(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateFields()) return;\r\n\r\n    const { passwordConfirm, ...fieldsWithoutPasswordConfirm } = fields;\r\n\r\n    dispatch(register(fieldsWithoutPasswordConfirm))\r\n      .unwrap()\r\n      .then(() => {\r\n        setFields({\r\n          username: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          passwordConfirm: \"\",\r\n        });\r\n        toast.success(\"Registration successful!\");\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setErrorMessage(\"Account with this email already exists.\");\r\n        toast.error(\"Account with this email already exists.\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <div className={styles.inputs}>\r\n        <div className={styles.inputContainer}>\r\n          <div className={styles.inputWrapper}>\r\n            <FontAwesomeIcon icon={faUser} className={styles.inputIcon} />\r\n\r\n            <Input\r\n              autoComplete=\"on\"\r\n              paddingLeft=\"53.5px\"\r\n              width=\"100%\"\r\n              type={\"text\"}\r\n              value={fields.username}\r\n              handleChange={(e) => {\r\n                setFields({ ...fields, username: e.target.value });\r\n              }}\r\n              handleBlur={handleBlur(\"username\")}\r\n              placeholder=\"Name\"\r\n              required={true}\r\n            />\r\n          </div>\r\n          {touched.username && !fields.username && (\r\n            <p className={styles.inputError}>Required</p>\r\n          )}\r\n        </div>\r\n        <div className={styles.inputContainer}>\r\n          <div className={styles.inputWrapper}>\r\n            <FontAwesomeIcon icon={faEnvelope} className={styles.inputIcon} />\r\n\r\n            <Input\r\n              autoComplete=\"on\"\r\n              paddingLeft=\"53.5px\"\r\n              width=\"100%\"\r\n              type=\"email\"\r\n              value={fields.email}\r\n              handleChange={(e) => {\r\n                setFields({ ...fields, email: e.target.value });\r\n              }}\r\n              handleBlur={handleBlur(\"email\")}\r\n              placeholder=\"E-mail\"\r\n              required={true}\r\n            />\r\n          </div>\r\n          {touched.email && !fields.email && (\r\n            <p className={styles.inputError}>Required</p>\r\n          )}\r\n        </div>\r\n        <div className={styles.inputContainer}>\r\n          <div className={styles.inputWrapper}>\r\n            <FontAwesomeIcon icon={faLock} className={styles.inputIcon} />\r\n\r\n            {eyeVisible && (\r\n              <VscEye\r\n                onClick={() => {\r\n                  toggleEyeVisible();\r\n                  toggleClosedEyeVisible();\r\n                  setType(\"text\");\r\n                }}\r\n                size=\"24px\"\r\n                className={styles.eyeIcon}\r\n              />\r\n            )}\r\n\r\n            {closedEyeVisible && (\r\n              <VscEyeClosed\r\n                onClick={() => {\r\n                  toggleEyeVisible();\r\n                  toggleClosedEyeVisible();\r\n                  setType(\"password\");\r\n                }}\r\n                size=\"24px\"\r\n                className={styles.eyeIcon}\r\n              />\r\n            )}\r\n\r\n            <Input\r\n              autoComplete=\"on\"\r\n              paddingLeft=\"53.5px\"\r\n              width=\"100%\"\r\n              type={type}\r\n              value={fields.password}\r\n              handleChange={(e) => {\r\n                setFields({ ...fields, password: e.target.value });\r\n              }}\r\n              handleBlur={handleBlur(\"password\")}\r\n              placeholder=\"Password\"\r\n              required={true}\r\n            />\r\n          </div>\r\n          {touched.password && !fields.password && (\r\n            <p className={styles.inputError}>Required</p>\r\n          )}\r\n        </div>\r\n        <div className={styles.inputContainer}>\r\n          <div className={styles.inputWrapper}>\r\n            <FontAwesomeIcon icon={faLock} className={styles.inputIcon} />\r\n\r\n            {confirmEyeVisible && (\r\n              <VscEye\r\n                onClick={() => {\r\n                  toggleConfirmEyeVisible();\r\n                  toggleConfirmClosedEyeVisible();\r\n                  setConfirmType(\"text\");\r\n                }}\r\n                size=\"24px\"\r\n                className={styles.eyeIcon}\r\n              />\r\n            )}\r\n\r\n            {confirmClosedEyeVisible && (\r\n              <VscEyeClosed\r\n                onClick={() => {\r\n                  toggleConfirmEyeVisible();\r\n                  toggleConfirmClosedEyeVisible();\r\n                  setConfirmType(\"password\");\r\n                }}\r\n                size=\"24px\"\r\n                className={styles.eyeIcon}\r\n              />\r\n            )}\r\n\r\n            <Input\r\n              autoComplete=\"on\"\r\n              paddingLeft=\"53.5px\"\r\n              width=\"100%\"\r\n              type={confirmType}\r\n              value={fields.passwordConfirm}\r\n              handleChange={(e) =>\r\n                setFields({ ...fields, passwordConfirm: e.target.value })\r\n              }\r\n              handleBlur={handleBlur(\"passwordConfirm\")}\r\n              placeholder=\"Confirm Password\"\r\n              required={true}\r\n            />\r\n          </div>\r\n          {touched.passwordConfirm && !fields.passwordConfirm && (\r\n            <p className={styles.inputError}>Required</p>\r\n          )}\r\n          {touched.passwordConfirm &&\r\n            fields.password !== fields.passwordConfirm && (\r\n              <p className={styles.inputError}>Passwords must match</p>\r\n            )}\r\n        </div>\r\n        <div className={styles.passwordStrengthBar}>\r\n          <div\r\n            className={styles.passwordStrengthIndicator}\r\n            style={{\r\n              width: `${(passwordStrength / 5) * 100}%`,\r\n              backgroundColor:\r\n                passwordStrength < 3\r\n                  ? \"red\"\r\n                  : passwordStrength < 4\r\n                    ? \"orange\"\r\n                    : \"green\",\r\n            }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles.buttonsContainer}>\r\n        <Button variant=\"colored\" type=\"submit\">\r\n          Register\r\n        </Button>\r\n\r\n        {errorMessage && <p className={styles.error}>{errorMessage}</p>}\r\n        <Link to=\"/login\" className={styles.navLink}>\r\n          <Button type=\"button\">\r\n            Log in\r\n          </Button>\r\n        </Link>{\" \"}\r\n        <ToastContainer position=\"top-center\" autoClose={5000} />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default RegisterForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"RegisterPage_section__OuGge\",\"title\":\"RegisterPage_title__3ISvk\"};","import React from 'react'\r\nimport RegisterForm from '../../components/RegisterForm/RegisterForm'\r\n\r\nimport styles from './RegisterPage.module.css'\r\n\r\nexport default function RegisterPage() {\r\n    return (\r\n        <section className={styles.section}>\r\n            <h2 className={styles.title}>Register</h2>\r\n            <RegisterForm />\r\n        </section>\r\n    )\r\n}\r\n"],"names":["Input","_ref","type","placeholder","required","variant","className","name","handleChange","width","value","paddingLeft","autoComplete","handleBlur","_jsx","style","styles","inputContainer","children","onChange","clsx","input","inputCenter","onBlur","initialState","arguments","length","undefined","touched","setTouched","useState","Object","keys","reduce","acc","key","field","prev","useFormValidation","validateFn","fields","setFields","errors","setErrors","validateFields","newErrors","username","password","email","strength","setStrength","useEffect","test","calculatePasswordStrength","passwordConfirm","validateRegister","useFormTouched","passwordStrength","usePasswordStrength","errorMessage","setErrorMessage","dispatch","useDispatch","setType","eyeVisible","toggleEyeVisible","useToggle","closedEyeVisible","toggleClosedEyeVisible","confirmType","setConfirmType","confirmEyeVisible","toggleConfirmEyeVisible","confirmClosedEyeVisible","toggleConfirmClosedEyeVisible","_jsxs","form","onSubmit","e","preventDefault","fieldsWithoutPasswordConfirm","register","unwrap","then","toast","success","catch","err","console","error","inputs","inputWrapper","FontAwesomeIcon","icon","faUser","inputIcon","target","inputError","faEnvelope","faLock","VscEye","onClick","size","eyeIcon","VscEyeClosed","passwordStrengthBar","passwordStrengthIndicator","backgroundColor","buttonsContainer","Button","Link","to","navLink","ToastContainer","position","autoClose","RegisterPage","section","title","RegisterForm"],"sourceRoot":""}