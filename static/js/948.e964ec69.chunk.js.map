{"version":3,"file":"static/js/948.e964ec69.chunk.js","mappings":"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","sources":["webpack://health/./src/components/LoginStatistics/LoginStatistics.module.css?05df","components/LoginStatistics/LoginStatistics.jsx","redux/public/selectorsPublic.js","hooks/usePublic.js","webpack://health/./src/components/DiaryAddForm/DiaryAddForm.module.css?e0d3","components/DiaryAddForm/DiaryAddForm.jsx","webpack://health/./src/pages/DiaryPage/DiaryPage.module.css?a519","pages/DiaryPage/DiaryPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"resultsCont\":\"LoginStatistics_resultsCont__bSZ00\",\"statisticCont\":\"LoginStatistics_statisticCont__W4sUJ\",\"resultsToday\":\"LoginStatistics_resultsToday__5XOvn\",\"statisticList\":\"LoginStatistics_statisticList__-K1dG\",\"statisticListItem\":\"LoginStatistics_statisticListItem__jwFY5\",\"statisticListItemSpan\":\"LoginStatistics_statisticListItemSpan__5hv5z\",\"notRecommendedCont\":\"LoginStatistics_notRecommendedCont__AujTB\",\"notRecommendedTitle\":\"LoginStatistics_notRecommendedTitle__xTGyK\",\"notRecommendedList\":\"LoginStatistics_notRecommendedList__H-Mel\",\"notRecommendedEmpty\":\"LoginStatistics_notRecommendedEmpty__2+pc3\",\"statisticSuperCont\":\"LoginStatistics_statisticSuperCont__yyZZY\",\"notRecommendedListItem\":\"LoginStatistics_notRecommendedListItem__0vXlq\"};","import React from 'react'\nimport PropTypes from \"prop-types\";\n\nimport { useMediaQuery } from \"react-responsive\";\nimport UserLogout from '../UserLogout/UserLogout';\nimport { useAuth } from '../../hooks/useAuth';\nimport { usePrivate } from '../../hooks/usePrivate';\n\nimport styles from './LoginStatistics.module.css'\n\nconst breakpoints = {\n    mobile: \"(max-width: 767px)\",\n    tablet: \"(min-width:768px)\",\n    desktop: \"(min-width:1024px)\",\n};\n\nfunction LoginStatistics({ day }) {\n    const isDesktop = useMediaQuery({ query: breakpoints.desktop });\n    const { user } = useAuth()\n    const { dailyCalorieSummary } = usePrivate()\n\n    // Validate the format dd-mm-yyyy\n    const isValidDate = /^\\d{2}.\\d{2}.\\d{4}$/.test(day);\n    if (!isValidDate) {\n        console.error(`Invalid date format: ${day}. Expected dd.mm.yyyy.`);\n    }\n\n    return (\n        <div className={styles.resultsCont}>\n            {isDesktop && <UserLogout />}\n            <div className={styles.statisticSuperCont}>\n                <div className={styles.statisticCont}>\n                    <p className={styles.resultsToday}>Summary for {day}</p>\n                    <ul className={styles.statisticList}>\n                        <li key=\"left\" className={styles.statisticListItem}>\n                            <span className={styles.statisticListItemSpan}>\n                                Left\n                            </span>\n                            <span className={styles.statisticListItemSpan}>\n                                {dailyCalorieSummary?.remainingCalories !== 0 ? dailyCalorieSummary.remainingCalories : '000'} kcal\n                            </span>\n                        </li>\n                        <li key=\"consumed\" className={styles.statisticListItem}>\n                            <span className={styles.statisticListItemSpan}>\n                                Consumed\n                            </span>\n                            <span className={styles.statisticListItemSpan}>\n                                {dailyCalorieSummary?.totalCaloriesConsumed > 0 ? dailyCalorieSummary.totalCaloriesConsumed : '000'} kcal\n                            </span>\n                        </li>\n                        <li key=\"daily\" className={styles.statisticListItem}>\n                            <span className={styles.statisticListItemSpan}>\n                                Daily rate\n                            </span>\n                            <span className={styles.statisticListItemSpan}>\n                                {dailyCalorieSummary?.dailyCalorieIntake > 0 ? dailyCalorieSummary.dailyCalorieIntake : '000'} kcal\n                            </span>                    </li>\n                        <li key=\"normal\" className={styles.statisticListItem}>\n                            <span className={styles.statisticListItemSpan}>\n                                n% of normal\n                            </span>\n                            <span className={styles.statisticListItemSpan}>\n                                {dailyCalorieSummary?.percentageCaloriesConsumed > 0 ? dailyCalorieSummary.percentageCaloriesConsumed : '0'} %\n                            </span>                    </li>\n                    </ul>\n                </div>\n                <div className={styles.notRecommendedCont}>\n                    <p className={styles.notRecommendedTitle}>\n                        Food not recommended\n                    </p>\n                    {user?.dietaryInfo?.restrictedAliments?.length > 0 ? (\n                        <ul className={styles.notRecommendedList}>\n                            {user.dietaryInfo.restrictedAliments.map((aliment) => (\n                                <li key={aliment?._id} className={styles.notRecommendedListItem}>\n                                    {aliment.title}\n                                </li>\n                            ))}\n                        </ul>\n                    ) : (\n                        <p className={styles.notRecommendedEmpty}>\n                            Your diet will be displayed here\n                        </p>\n                    )}\n                </div>\n            </div>\n        </div>)\n}\n\nLoginStatistics.propTypes = {\n    day: PropTypes.string.isRequired,\n};\n\nexport default LoginStatistics;","import { createSelector } from \"reselect\";\n\n// Basic selector to get the slice of state\nconst selectPublicCalculatorState = (state) => state.publicCalculatorSlice;\n\n// Memoized selector for formData\nexport const selectFormData = createSelector(\n    [selectPublicCalculatorState],\n    (publicCalculatorSlice) => ({\n        height: publicCalculatorSlice.height,\n        age: publicCalculatorSlice.age,\n        currentWeight: publicCalculatorSlice.currentWeight,\n        desiredWeight: publicCalculatorSlice.desiredWeight,\n        bloodGroupIndex: publicCalculatorSlice.bloodGroupIndex,\n    })\n);\n\nexport const selectResult = (state) => state.publicCalculatorSlice.result;\nexport const selectLoading = (state) => state.publicCalculatorSlice.loading;\nexport const selectError = (state) => state.publicCalculatorSlice.error;\nexport const selectProducts = (state) => state.publicCalculatorSlice.products;\nexport const selectProduct = (state) => state.publicCalculatorSlice.product;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n    selectError,\n    selectFormData,\n    selectLoading,\n    selectResult,\n    selectProducts,\n    selectProduct,\n} from \"../redux/public/selectorsPublic\";\n\nexport const usePublic = () => {\n    const dispatch = useDispatch(); // Add dispatch for triggering actions\n    const formData = useSelector(selectFormData);\n    const isLoading = useSelector(selectLoading);\n    const errorPublic = useSelector(selectError);\n    const result = useSelector(selectResult);\n    const products = useSelector(selectProducts);\n    const product = useSelector(selectProduct);\n\n    return {\n        formData,\n        isLoading,\n        errorPublic,\n        result,\n        products,\n        product,\n        dispatch, // Include dispatch in the returned object\n    };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"inputsContainer\":\"DiaryAddForm_inputsContainer__MnraY\",\"input\":\"DiaryAddForm_input__z2hq8\",\"name\":\"DiaryAddForm_name__ocIyW\",\"quantity\":\"DiaryAddForm_quantity__s0RLX\"};","import React, { useEffect } from 'react'\nimport PropTypes from \"prop-types\";\n\nimport { useMediaQuery } from \"react-responsive\";\n\nimport styles from './DiaryAddForm.module.css'\nimport Button from '../commonComponents/Button';\nimport clsx from 'clsx';\nimport { usePublic } from '../../hooks/usePublic';\nimport { fetchProducts } from '../../redux/public/operationsPublic';\n\nconst breakpoints = {\n    mobile: \"(max-width: 767px)\",\n    tablet: \"(min-width:768px)\",\n    desktop: \"(min-width:1024px)\",\n};\n\nfunction DiaryAddForm({\n    searchTerm,\n    setSearchTerm,\n    filteredProducts,\n    quantity,\n    setQuantity,\n    handleAddProduct,\n    handleProductsForSelectedDate,\n    date }) {\n    const isMobile = useMediaQuery({ query: breakpoints.mobile })\n    const { dispatch } = usePublic()\n\n    useEffect(() => {\n        dispatch(fetchProducts())\n    }, [dispatch])\n\n    return (\n        <div className={styles.inputsContainer}>\n            <input\n                className={clsx(styles.input, styles.name)}\n                type=\"text\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                list=\"productList\"\n                placeholder=\"Search product name *\"\n            />\n            <datalist id=\"productList\">\n                {filteredProducts.map((product) => (\n                    <option key={product._id} value={product.title}> {/* Use the title */}\n                        {product.title}\n                    </option>\n                ))}\n            </datalist>\n\n            <input\n                className={clsx(styles.input, styles.quantity)}\n                type=\"number\"\n                value={quantity}\n                onChange={(e) => setQuantity(e.target.value)}\n                placeholder=\"Grams *\"\n                step={50}\n            />\n\n            {!isMobile && <Button\n                variant=\"plusButton\"\n                handleClick={() => {\n                    handleAddProduct();\n                    handleProductsForSelectedDate(date);\n                }}\n                disabled={!date || !searchTerm || !quantity}\n            >\n                +\n            </Button>}\n        </div>)\n}\n\nDiaryAddForm.propTypes = {\n    searchTerm: PropTypes.string,\n    setSearchTerm: PropTypes.func,\n    filteredProducts: PropTypes.array,\n    quantity: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]),\n    setQuantity: PropTypes.func,\n    handleAddProduct: PropTypes.func,\n    handleProductsForSelectedDate: PropTypes.func,\n    date: PropTypes.string,\n};\n\nexport default DiaryAddForm","// extracted by mini-css-extract-plugin\nexport default {\"closeButton\":\"DiaryPage_closeButton__8Wsmh\",\"closeModal\":\"DiaryPage_closeModal__ukIqj\",\"mobileHeaderCont\":\"DiaryPage_mobileHeaderCont__a7iJL\",\"modalHeader\":\"DiaryPage_modalHeader__dhYqf\",\"logoHeaderContainer\":\"DiaryPage_logoHeaderContainer__2c1f2\",\"mobileSubHeaderCont\":\"DiaryPage_mobileSubHeaderCont__F4J6z\",\"modalLogoutActionCenter\":\"DiaryPage_modalLogoutActionCenter__+SKlj\",\"modalUserLogoutCont\":\"DiaryPage_modalUserLogoutCont__cr6RX\",\"section\":\"DiaryPage_section__oJsWR\",\"calculatorCont\":\"DiaryPage_calculatorCont__Y2AJw\",\"diaryPage\":\"DiaryPage_diaryPage__pKsQy\",\"datePicker\":\"DiaryPage_datePicker__-j9YO\",\"icon\":\"DiaryPage_icon__fwz+6\",\"productList\":\"DiaryPage_productList__6fCMg\",\"productRow\":\"DiaryPage_productRow__OcvNk\",\"right\":\"DiaryPage_right__K-opd\",\"name\":\"DiaryPage_name__+-5vy\",\"errorMessage\":\"DiaryPage_errorMessage__BqUBO\",\"quantity\":\"DiaryPage_quantity__41yoN\",\"calories\":\"DiaryPage_calories__i54n4\",\"delete\":\"DiaryPage_delete__pdpiB\",\"noProducts\":\"DiaryPage_noProducts__53aBB\",\"plusButton\":\"DiaryPage_plusButton__StqeW\",\"leftCont\":\"DiaryPage_leftCont__yMOEt\"};","import React, { useState, useEffect } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\n\nimport { fetchProducts } from \"../../redux/public/operationsPublic\";\nimport { addConsumedProductForSpecificDay, deleteConsumedProductForSpecificDay, fetchConsumedProductsForSpecificDay } from \"../../redux/private/operationsPrivate\";\n\nimport { usePublic } from \"../../hooks/usePublic\";\nimport { usePrivate } from \"../../hooks/usePrivate\";\n\nimport LoginStatistics from \"../../components/LoginStatistics/LoginStatistics\";\nimport Logo from \"../../components/Logo/Logo\";\nimport NavLinks from \"../../components/NavLinks/NavLinks\";\n\nimport { FiCalendar } from \"react-icons/fi\";\n\nimport DiaryAddForm from \"../../components/DiaryAddForm/DiaryAddForm\";\nimport Button from \"../../components/commonComponents/Button\";\nimport { logOut } from \"../../redux/auth/operationsAuth\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport useToggle from \"../../hooks/useToggle\";\nimport Modal from \"../../components/commonComponents/Modal/Modal\";\nimport UserLogout from \"../../components/UserLogout/UserLogout\";\n\nimport styles from \"./DiaryPage.module.css\";\n\nconst breakpoints = {\n    mobile: \"(max-width: 767px)\",\n    tablet: \"(min-width:768px)\",\n    desktop: \"(min-width:1024px)\",\n};\n\nexport default function DiaryPage() {\n    const isMobile = useMediaQuery({ query: breakpoints.mobile })\n    const isTablet = useMediaQuery({ query: breakpoints.tablet })\n    const isDesktop = useMediaQuery({ query: breakpoints.desktop });\n\n    const navigate = useNavigate();\n\n    const thisDispatch = useDispatch()\n    const { products, dispatch } = usePublic();\n    const { privateDispatch, error, consumedProducts } = usePrivate();\n\n    const [isDiaryMobileModalVisible, toggleisDiaryMobileModalVisible] = useToggle(false);\n    // console.log(\"consumedProducts:\", consumedProducts);\n\n    useEffect(() => {\n        if (isDiaryMobileModalVisible) {\n            document.body.classList.add(styles.noScroll);\n        } else {\n            document.body.classList.remove(styles.noScroll);\n        }\n\n        const handleEscapeKey = (event) => {\n            if (event.key === \"Escape\") toggleisDiaryMobileModalVisible();\n        };\n\n        document.addEventListener(\"keydown\", handleEscapeKey);\n\n        return () => {\n            document.body.classList.remove(styles.noScroll);\n            document.removeEventListener(\"keydown\", handleEscapeKey);\n        };\n    }, [isDiaryMobileModalVisible, toggleisDiaryMobileModalVisible]);\n\n    useEffect(() => {\n        if (error === \"Not authorized\") {\n            setTimeout(() => thisDispatch(logOut()), 3000);\n        }\n    }, [error, thisDispatch]);\n\n    useEffect(() => {\n        if (error === \"Not authorized\") {\n            setTimeout(() => navigate(\"/login\"), 5000);\n        }\n    }, [error, navigate]);\n\n    function handleOpenModal() {\n        toggleisDiaryMobileModalVisible()\n    }\n\n    const today = new Date().toISOString().split(\"T\")[0];\n\n    const [date, setDate] = useState(today);\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [quantity, setQuantity] = useState(\"\");\n    // console.log(\"date:\", date);\n    // console.log(\"quantity:\", quantity);\n    // console.log(\"searchTerm:\", searchTerm);\n\n    useEffect(() => {\n        if (products.length === 0) {\n            dispatch(fetchProducts());\n        }\n    }, [dispatch, products]);\n\n    useEffect(() => {\n\n        privateDispatch(fetchConsumedProductsForSpecificDay({ date: date }))\n    }, [privateDispatch, date]);\n\n    const allProducts = Array.isArray(products.data) ? products.data.flat() : [];\n    const filteredProducts = allProducts.filter((product) =>\n        product.title.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    // console.log(\"products:\", products);\n\n    // console.log(\"allProducts:\", allProducts);\n\n    // console.log(\"filteredProducts:\", filteredProducts);\n\n    const handleAddProduct = () => {\n        if (searchTerm && quantity) {\n            privateDispatch(\n                addConsumedProductForSpecificDay({\n                    product: searchTerm,  // Send title (string) here\n                    date,\n                    quantity,\n                })\n            );\n            setSearchTerm(\"\"); // Clear selection\n            setQuantity(\"\"); // Reset quantity\n        }\n    };\n\n    const handleDeleteProduct = (product, date) => {\n        const productId = (productTitle) => {\n            const foundProduct = allProducts.find((item) => item.title === productTitle);\n            // console.log(\"Found product:\", foundProduct);\n\n            if (foundProduct) {\n                // console.log(\"found\");\n                // console.log(foundProduct._id);\n\n                return foundProduct._id; // Return the product's ID\n            }\n            // console.log(\"not found\");\n\n            return null; // Return null if no product is found\n        };\n\n        // console.log('delete');\n\n        const id = productId(product)\n        // console.log(id);\n\n\n        privateDispatch(deleteConsumedProductForSpecificDay({ productId: id, date }));\n        handleProductsForSelectedDate(date)\n    };\n\n    function handleProductsForSelectedDate(date) {\n        setTimeout(() => {\n            privateDispatch(fetchConsumedProductsForSpecificDay({ date: date }));\n        }, 1000); // Delay of 500ms\n    };\n\n    function formatToDisplayDate(date) {\n        const [year, month, day] = date.split(\"-\");\n        return `${day}.${month}.${year}`;\n    }\n\n    return (\n        <section className={styles.section}>\n            {isDiaryMobileModalVisible && isMobile && !isTablet && !isDesktop && (\n                <div\n                    className={styles.modalOverlay}\n                >\n                    <div className={styles.modalContent}>\n                        <Modal\n                            closeButton={styles.closeButton}\n                            handleModalClose={toggleisDiaryMobileModalVisible}\n                            isModalVisible={isDiaryMobileModalVisible}\n                        >\n                            {isMobile && (\n                                <div className={styles.mobileHeaderCont}>\n                                    <header className={styles.modalHeader}>\n                                        <Logo className={styles.logoHeaderContainer} />\n                                        <NavLinks />\n                                    </header>\n                                    <div className={styles.mobileSubHeaderCont}>\n                                        <button onClick={toggleisDiaryMobileModalVisible} className={styles.mobileHeaderExitButton}>\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"9\" viewBox=\"0 0 15 9\" fill=\"none\">\n                                                <path d=\"M14 1.5V4.5H2M2 4.5L5.5 1M2 4.5L5.5 8\" stroke=\"black\" strokeWidth=\"2\" />\n                                            </svg>\n                                        </button>\n                                        <div className={styles.modalUserLogoutCont}>\n                                            <UserLogout />\n                                        </div>\n                                    </div>\n                                </div>\n                            )}\n                            <div className={styles.modalLogoutActionCenter}>\n                                <DiaryAddForm\n                                    searchTerm={searchTerm}\n                                    setSearchTerm={setSearchTerm} filteredProducts={filteredProducts}\n                                    quantity={quantity}\n                                    setQuantity={setQuantity}\n                                    handleAddProduct={handleAddProduct}\n                                    handleProductsForSelectedDate={handleProductsForSelectedDate}\n                                    date={date}\n                                />\n\n                                <Button\n                                    id=\"closeModal\"\n                                    handleClick={() => {\n                                        toggleisDiaryMobileModalVisible();\n                                        handleAddProduct();\n                                        handleProductsForSelectedDate(date);\n                                    }}\n                                >\n                                    Add\n                                </Button>\n\n                            </div>\n                        </Modal>\n                    </div>\n                </div>\n            )}\n\n            <div className={styles.calculatorCont}>\n                {isDesktop && (\n                    <div className={styles.leftCont}>\n                        <Logo />\n                        <NavLinks />\n                    </div>\n                )}\n\n                {error && <div className={styles.errorMessage}>{(error === 'Not authorized') ? <div className={styles.errorMessage}>\n                    <p>\n                        For reasons of personal data security Your authorisation has expired ! We will shortely redirect You to your login page. If you want to continue pleas login again ! Thank You for understanding !\n                    </p>\n                </div> : error}\n                </div>}\n\n                <div className={styles.diaryPage}>\n                    <div className={styles.datePicker}>\n                        <input\n                            type=\"date\"\n                            value={date}\n                            onChange={(e) => setDate(e.target.value)}\n                            placeholder=\"Select Date\"\n                            max={new Date().toISOString().split(\"T\")[0]}\n                            className=\"custom-date-picker\"\n                        />\n                        <FiCalendar className={styles.icon} />\n\n                    </div>\n\n                    {!isMobile && <DiaryAddForm\n                        searchTerm={searchTerm}\n                        setSearchTerm={setSearchTerm} filteredProducts={filteredProducts}\n                        quantity={quantity}\n                        setQuantity={setQuantity}\n                        handleAddProduct={handleAddProduct}\n                        handleProductsForSelectedDate={handleProductsForSelectedDate}\n                        date={date}\n                    />}\n\n                    <ul className={styles.productList}>\n                        {consumedProducts.length > 0 ? (\n                            consumedProducts.map((product, index) => (\n                                <li key={index} className={styles.productRow}>\n                                    <span className={styles.name}>{product?.productName ? product?.productName : product.product}</span>\n                                    <div className={styles.right}>\n                                        <span className={styles.quantity}>{product.quantity}g</span>\n                                        <span className={styles.calories}>\n                                            {product.calories}\n                                            kcal\n                                        </span>\n                                        <button className={styles.delete} onClick={() => { handleDeleteProduct(product.product, date) }}>\n                                            X\n                                        </button>\n                                    </div>\n                                </li>\n                            ))\n                        ) : (\n                            <p className={styles.noProducts}>\n                                There are no products consumed on the selected date !\n                            </p>\n                        )}\n                    </ul>\n\n                    {isMobile && (<Button handleClick={handleOpenModal} className={styles.plusButton} variant=\"plusButton\">+</Button>)}\n                </div>\n            </div>\n\n            <LoginStatistics day={formatToDisplayDate(date)} />\n        </section>\n    );\n}\n"],"names":["breakpoints","_ref","_user$dietaryInfo","_user$dietaryInfo$res","day","isDesktop","useMediaQuery","query","user","useAuth","dailyCalorieSummary","usePrivate","test","console","error","_jsxs","className","styles","children","_jsx","UserLogout","remainingCalories","totalCaloriesConsumed","dailyCalorieIntake","percentageCaloriesConsumed","dietaryInfo","restrictedAliments","length","map","aliment","title","_id","selectFormData","createSelector","state","publicCalculatorSlice","height","age","currentWeight","desiredWeight","bloodGroupIndex","selectResult","result","selectLoading","loading","selectError","selectProducts","products","selectProduct","product","usePublic","dispatch","useDispatch","formData","useSelector","isLoading","errorPublic","searchTerm","setSearchTerm","filteredProducts","quantity","setQuantity","handleAddProduct","handleProductsForSelectedDate","date","isMobile","useEffect","fetchProducts","clsx","type","value","onChange","e","target","list","placeholder","id","step","Button","variant","handleClick","disabled","mobile","tablet","desktop","DiaryPage","isTablet","navigate","useNavigate","thisDispatch","privateDispatch","consumedProducts","isDiaryMobileModalVisible","toggleisDiaryMobileModalVisible","useToggle","document","body","classList","add","noScroll","remove","handleEscapeKey","event","key","addEventListener","removeEventListener","setTimeout","logOut","today","Date","toISOString","split","setDate","useState","fetchConsumedProductsForSpecificDay","allProducts","Array","isArray","data","flat","filter","toLowerCase","includes","addConsumedProductForSpecificDay","section","modalOverlay","modalContent","Modal","closeButton","handleModalClose","isModalVisible","mobileHeaderCont","modalHeader","Logo","logoHeaderContainer","NavLinks","mobileSubHeaderCont","onClick","mobileHeaderExitButton","xmlns","width","viewBox","fill","d","stroke","strokeWidth","modalUserLogoutCont","modalLogoutActionCenter","DiaryAddForm","calculatorCont","leftCont","errorMessage","diaryPage","datePicker","max","FiCalendar","icon","productList","index","productRow","name","productName","right","calories","delete","handleDeleteProduct","productTitle","foundProduct","find","item","productId","deleteConsumedProductForSpecificDay","noProducts","plusButton","LoginStatistics","year","month","formatToDisplayDate"],"sourceRoot":""}