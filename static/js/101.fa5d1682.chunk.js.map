{"version":3,"file":"static/js/101.fa5d1682.chunk.js","mappings":"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","sources":["webpack://health/./src/components/commonComponents/Input/Input.module.css?389e","components/commonComponents/Input/Input.jsx","hooks/useFormTouched.js","hooks/useFormValidation.js","hooks/validateLogin.js","webpack://health/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","webpack://health/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"Input_inputContainer__QZk4R\",\"input\":\"Input_input__MJJzI\",\"inputCenter\":\"Input_inputCenter__pFBIS\",\"inputInfo\":\"Input_inputInfo__z+ueb\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\n\nimport styles from \"./Input.module.css\";\n\nexport default function Input({\n  type,\n  placeholder,\n  required,\n  variant = \"\",\n  className,\n  name,\n  handleChange,\n  width,\n  value,\n  paddingLeft,\n  autoComplete,\n  handleBlur,\n}) {\n  return (\n    <div style={{ width: width || \"auto\" }} className={styles.inputContainer}>\n      <input\n        autoComplete={autoComplete || \"off\"}\n        style={{ paddingLeft: paddingLeft || \"0px\" }}\n        onChange={handleChange}\n        name={name || \"\"}\n        className={clsx(\n          styles.input,\n          className,\n          variant === \"center\" ? styles.inputCenter : styles.input\n        )}\n        type={type || \"text\"}\n        placeholder={placeholder || \"\"}\n        required={required || false}\n        value={value || \"\"}\n        onBlur={handleBlur}\n      />\n    </div>\n  );\n}\n\nInput.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  paddingLeft: PropTypes.string,\n  autoComplete: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  name: PropTypes.string,\n  type: PropTypes.string,\n  variant: PropTypes.string,\n  handleChange: PropTypes.func,\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  placeholder: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n","import { useState } from \"react\";\n\nconst useFormTouched = (initialState = {}) => {\n  const [touched, setTouched] = useState(\n    Object.keys(initialState).reduce((acc, key) => {\n      acc[key] = false;\n      return acc;\n    }, {})\n  );\n\n  const handleBlur = (field) => () => {\n    setTouched((prev) => ({ ...prev, [field]: true }));\n  };\n\n  return {\n    touched,\n    handleBlur,\n  };\n};\n\nexport default useFormTouched;\n","import { useState } from \"react\";\n\nconst useFormValidation = (initialState, validateFn) => {\n  const [fields, setFields] = useState(initialState);\n  const [errors, setErrors] = useState({});\n\n  const validateFields = () => {\n    const newErrors = validateFn(fields);\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  return {\n    fields,\n    setFields,\n    errors,\n    validateFields,\n  };\n};\n\nexport default useFormValidation;\n","const validateLogin = (fields) => {\n    const errors = {};\n    if (!fields.email) {\n        errors.email = \"Email is required\";\n    }\n    if (!fields.password) {\n        errors.password = \"Password is required\";\n    }\n    return errors;\n};\n\nexport default validateLogin;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__gPEx5\",\"inputWrapper\":\"LoginForm_inputWrapper__jO1zg\",\"inputIcon\":\"LoginForm_inputIcon__GDKJZ\",\"inputError\":\"LoginForm_inputError__cPf0D\",\"eyeIcon\":\"LoginForm_eyeIcon__UzGhv\",\"errorCont\":\"LoginForm_errorCont__MHL+1\",\"error\":\"LoginForm_error__012y+\",\"buttonsContainer\":\"LoginForm_buttonsContainer__bkTpy\"};","import React, { useState } from \"react\";\nimport { logIn } from \"../../redux/auth/operationsAuth\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Input from \"../commonComponents/Input/Input\";\nimport Button from \"../commonComponents/Button\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope, faLock } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { VscEye, VscEyeClosed } from \"react-icons/vsc\";\nimport useToggle from \"../../hooks/useToggle\";\nimport useFormValidation from \"../../hooks/useFormValidation\";\nimport validateLogin from \"../../hooks/validateLogin\";\nimport useFormTouched from \"../../hooks/useFormTouched\";\n\nimport { useAuth } from \"../../hooks/useAuth\";\nimport clsx from \"clsx\";\n\nimport styles from \"./LoginForm.module.css\";\n\nfunction LoginForm() {\n  const { fields, setFields, validateFields } = useFormValidation(\n    {\n      email: \"\",\n      password: \"\",\n    },\n    validateLogin\n  );\n\n  const { user, isLoggedIn } = useAuth()\n\n  const { touched, handleBlur } = useFormTouched(fields);\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const [type, setType] = useState(\"password\");\n  const [eyeVisible, toggleEyeVisible] = useToggle(true);\n  const [closedEyeVisible, toggleClosedEyeVisible] = useToggle(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!validateFields()) return;\n\n    try {\n      await dispatch(logIn(fields))\n        .unwrap()\n    } catch (error) {\n      setFields((prevFields) => ({\n        ...prevFields,\n        errorMessage: setErrorMessage(\n          \"You have entered an invalid username or password.\"\n        ),\n      }));\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <div className={styles.inputContainer}>\n          <div className={styles.inputWrapper}>\n            <FontAwesomeIcon icon={faEnvelope} className={styles.inputIcon} />\n\n            <Input\n              autoComplete=\"on\"\n              paddingLeft=\"53.5px\"\n              width=\"100%\"\n              type=\"email\"\n              value={fields.email}\n              handleChange={(e) => {\n                setFields({ ...fields, email: e.target.value });\n              }}\n              handleBlur={handleBlur(\"email\")}\n              placeholder=\"Email *\"\n              required={true}\n            />\n          </div>\n          {touched.email && !fields.email && (\n            <p className={styles.inputError}>Required</p>\n          )}\n        </div>\n        <div styles={styles.inputContainer}>\n          <div className={styles.inputWrapper}>\n            <FontAwesomeIcon icon={faLock} className={styles.inputIcon} />\n\n            {eyeVisible && (\n              <VscEye\n                onClick={() => {\n                  toggleEyeVisible();\n                  toggleClosedEyeVisible();\n                  setType(\"text\");\n                }}\n                size=\"24px\"\n                className={styles.eyeIcon}\n              />\n            )}\n\n            {closedEyeVisible && (\n              <VscEyeClosed\n                onClick={() => {\n                  toggleEyeVisible();\n                  toggleClosedEyeVisible();\n                  setType(\"password\");\n                }}\n                size=\"24px\"\n                className={styles.eyeIcon}\n              />\n            )}\n\n            <Input\n              autoComplete=\"on\"\n              paddingLeft=\"53.5px\"\n              width=\"100%\"\n              type={type}\n              value={fields.password}\n              handleChange={(e) => {\n                setFields({ ...fields, password: e.target.value });\n              }}\n              handleBlur={handleBlur(\"password\")}\n              placeholder=\"Password\"\n              required={true}\n            />\n          </div>\n          {touched.password && fields.password.length < 6 && (\n            <p className={styles.inputError}>\n              Password must be at least 6 characters!\n            </p>\n          )}\n        </div>\n        <div className={styles.buttonsContainer}>\n          <Button variant=\"colored\" type=\"submit\">\n            Log in\n          </Button>\n\n          {errorMessage && <p className={styles.error}>{errorMessage}</p>}\n\n          <Button type=\"button\">\n            <Link to=\"/register\" className={styles.navLink}>\n              Register\n            </Link>{\" \"}\n          </Button>\n\n\n\n          {errorMessage && <p className={styles.error}>{errorMessage}</p>}\n\n        </div>\n        {(user !== null && !isLoggedIn) && ((<div className={styles.errorCont}>\n          <p className={styles.error}>It seems that your email is not verified! Please click the Verify button to be redirected to verify email page !\n          </p><Button>\n            <Link to=\"/verify-email\" className={clsx(styles.navLink, styles.link)}>\n              Verify\n            </Link>\n          </Button>\n        </div>))}\n      </form>\n    </>\n  );\n}\n\nexport default LoginForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"LoginPage_section__pqfrr\",\"title\":\"LoginPage_title__RBt-o\"};","import React, { useEffect } from 'react';\nimport LoginForm from '../../components/LoginForm/LoginForm';\n\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport styles from './LoginPage.module.css';\nimport { useAuth } from '../../hooks/useAuth';\n\nexport default function LoginPage() {\n    const { isLoggedIn, user } = useAuth();\n\n    // Show a toast notification when login is successful\n    useEffect(() => {\n        if (isLoggedIn || user?.verify) {\n            toast.success(\"Login successful!\");\n        }\n    }, [isLoggedIn, user?.verify]); // Dependency array ensures the effect runs when these values change.\n\n    return (\n        <section className={styles.section}>\n            <h2 className={styles.title}>Log In</h2>\n            <LoginForm />\n            <ToastContainer />\n        </section>\n    );\n}\n"],"names":["Input","_ref","type","placeholder","required","variant","className","name","handleChange","width","value","paddingLeft","autoComplete","handleBlur","_jsx","style","styles","inputContainer","children","onChange","clsx","input","inputCenter","onBlur","initialState","arguments","length","undefined","touched","setTouched","useState","Object","keys","reduce","acc","key","field","prev","useFormValidation","validateFn","fields","setFields","errors","setErrors","validateFields","newErrors","email","password","validateLogin","user","isLoggedIn","useAuth","useFormTouched","errorMessage","setErrorMessage","dispatch","useDispatch","setType","eyeVisible","toggleEyeVisible","useToggle","closedEyeVisible","toggleClosedEyeVisible","_Fragment","_jsxs","onSubmit","async","e","preventDefault","logIn","unwrap","error","prevFields","form","inputWrapper","FontAwesomeIcon","icon","faEnvelope","inputIcon","target","inputError","faLock","VscEye","onClick","size","eyeIcon","VscEyeClosed","buttonsContainer","Button","Link","to","navLink","errorCont","link","LoginPage","useEffect","verify","toast","success","section","title","LoginForm","ToastContainer"],"sourceRoot":""}