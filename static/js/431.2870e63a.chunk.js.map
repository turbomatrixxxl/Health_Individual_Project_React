{"version":3,"file":"static/js/431.2870e63a.chunk.js","mappings":"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","sources":["webpack://health/./src/components/Calculator/Calculator.module.css?7770","webpack://health/./src/components/WeightLossForm/WeightLossForm.module.css?c660","components/WeightLossForm/WeightLossForm.jsx","components/Calculator/Calculator.jsx","webpack://health/./src/components/commonComponents/Input/Input.module.css?389e","components/commonComponents/Input/Input.jsx","redux/public/selectorsPublic.js","hooks/usePublic.js","webpack://health/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cont\":\"Calculator_cont__hof16\",\"title\":\"Calculator_title__0VU03\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"WeightLossForm_form__vXQGd\",\"formMainCont\":\"WeightLossForm_formMainCont__iwbqv\",\"formLeftCont\":\"WeightLossForm_formLeftCont__NE+NA\",\"formRightCont\":\"WeightLossForm_formRightCont__FzY75\",\"bloodTypeContainer\":\"WeightLossForm_bloodTypeContainer__Ooi9f\",\"label\":\"WeightLossForm_label__OkR4d\",\"radioGroup\":\"WeightLossForm_radioGroup__ixH+l\",\"radioInput\":\"WeightLossForm_radioInput__qHjLL\",\"radioLabel\":\"WeightLossForm_radioLabel__FW6g2\",\"errorMessage\":\"WeightLossForm_errorMessage__pIDNO\",\"link\":\"WeightLossForm_link__1VjI+\"};","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Input from \"../commonComponents/Input/Input\";\nimport Button from \"../commonComponents/Button\";\n\nimport { setFormData } from \"../../redux/public/publicCalculatorSlice\";\nimport { usePublic } from \"../../hooks/usePublic\";\n\nimport { setPrivateFormData } from '../../redux/private/privateSlice'\nimport { usePrivate } from \"../../hooks/usePrivate\";\n\nimport { useAuth } from \"../../hooks/useAuth\";\n\nimport styles from \"./WeightLossForm.module.css\";\n\nconst bloodTypeOptions = [\n    { value: \"1\", label: \"A\" },\n    { value: \"2\", label: \"B\" },\n    { value: \"3\", label: \"AB\" },\n    { value: \"4\", label: \"O\" },\n];\n\nexport default function WeightLossForm({ onSubmit, handleClick }) {\n    const { formData = {}, isLoading, dispatch } = usePublic();\n    const { privateFormData = {}, privateLoading, privateDispatch } = usePrivate()\n    const { isLoggedIn } = useAuth()\n    // console.log(isLoggedIn);\n    // console.log(privateLoading);\n    // console.log(privateFormData);\n\n    // Initialize form state with default values\n    useEffect(() => {\n        const defaultValues = {\n            height: \"\",\n            age: \"\",\n            currentWeight: \"\",\n            desiredWeight: \"\",\n            bloodGroupIndex: \"\",\n        };\n\n        const setter = isLoggedIn ? privateDispatch : dispatch;\n        const setAction = isLoggedIn ? setPrivateFormData : setFormData;\n\n        Object.entries(defaultValues).forEach(([key, value]) => {\n            if (!isLoggedIn && !formData[key]) {\n                setter(setAction({ name: key, value }));\n            }\n            if (isLoggedIn && !privateFormData[key]) {\n                setter(setAction({ name: key, value }));\n            }\n        });\n    }, [dispatch, privateDispatch, formData, privateFormData, isLoggedIn]);\n\n    // console.log(formData);\n\n\n    // Check if all form fields are valid\n    const isValid = Object.values(isLoggedIn ? privateFormData : formData).every(\n        (field) => field?.toString().trim() !== \"\"\n    );\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        !isLoggedIn\n            ? dispatch(setFormData({ name, value }))\n            : privateDispatch(setPrivateFormData({ name, value }));\n    };\n\n    const handleRadioChange = (value) => {\n        !isLoggedIn\n            ? dispatch(setFormData({ name: \"bloodGroupIndex\", value }))\n            : privateDispatch(setPrivateFormData({ name: \"bloodGroupIndex\", value }));\n    };\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const dataToSubmit = isLoggedIn ? privateFormData : formData;\n        if (isValid) {\n            onSubmit(dataToSubmit);\n        }\n    };\n\n    const height = !isLoggedIn ? formData.height : privateFormData.height\n    const age = !isLoggedIn ? formData.age : privateFormData.age\n    const currentWeight = !isLoggedIn ? formData.currentWeight : privateFormData.currentWeight\n    const desiredWeight = !isLoggedIn ? formData.desiredWeight : privateFormData.desiredWeight\n    const bloodGroupIndex = !isLoggedIn ? formData.bloodGroupIndex : privateFormData.bloodGroupIndex\n    const loading = !isLoggedIn ? isLoading : privateLoading\n\n\n    return (\n        <form onSubmit={handleSubmit} className={styles.form}>\n\n\n            <div className={styles.formMainCont}>\n                {/* Left Section */}\n                <div className={styles.formLeftCont}>\n                    <Input\n                        type=\"number\"\n                        placeholder=\"Height*\"\n                        name=\"height\"\n                        value={height || \"\"}\n                        handleChange={handleChange}\n                        required\n                    />\n\n                    <Input\n                        type=\"number\"\n                        placeholder=\"Age*\"\n                        name=\"age\"\n                        value={age || \"\"}\n                        handleChange={handleChange}\n                        required\n                    />\n\n                    <Input\n                        type=\"number\"\n                        placeholder=\"Current weight*\"\n                        name=\"currentWeight\"\n                        value={currentWeight || \"\"}\n                        handleChange={handleChange}\n                        required\n                    />\n                </div>\n\n                {/* Right Section */}\n                <div className={styles.formRightCont}>\n                    <Input\n                        type=\"number\"\n                        placeholder=\"Desired weight*\"\n                        name=\"desiredWeight\"\n                        value={desiredWeight || \"\"}\n                        handleChange={handleChange}\n                        required\n                    />\n\n                    <div className={styles.bloodTypeContainer}>\n                        <label className={styles.label}></label>\n\n                        {/* Read-Only Input */}\n                        <Input\n                            type=\"text\"\n                            placeholder=\"Blood type*\"\n                            name=\"bloodType\"\n                            value={bloodTypeOptions.find((opt) => opt.value === bloodGroupIndex)?.label || \"\"}\n                            handleChange={handleChange}\n                            required\n                            readOnly\n                        />\n\n                        {/* Radio Buttons */}\n                        <div className={styles.radioGroup}>\n                            {bloodTypeOptions.map((option) => (\n                                <React.Fragment key={option.value}>\n                                    <input\n                                        type=\"radio\"\n                                        id={`bloodType-${option.value}`}\n                                        name=\"bloodType\"\n                                        value={option.value}\n                                        checked={bloodGroupIndex === option.value}\n                                        onChange={() => handleRadioChange(option.value)}\n                                        className={styles.radioInput}\n                                    />\n                                    <label htmlFor={`bloodType-${option.value}`} className={styles.radioLabel}>\n                                        {option.label}\n                                    </label>\n                                </React.Fragment>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <Button handleClick={handleClick} type=\"submit\" variant=\"colored\" disabled={!isValid || loading}>\n                {loading ? \"Loading...\" : \"Start losing weight\"}\n            </Button>\n        </form>\n    );\n}\n\nWeightLossForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    handleClick: PropTypes.func,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Calculator.module.css\";\nimport WeightLossForm from \"../WeightLossForm/WeightLossForm\";\n\nexport default function Calculator({ onSubmit, handleClick }) {\n    return (\n        <div className={styles.cont}>\n            <h2 className={styles.title}>\n                Calculate your daily calorie intake right now\n            </h2>\n\n            <WeightLossForm handleClick={handleClick} onSubmit={onSubmit} />\n        </div>\n    );\n}\n\nCalculator.propTypes = {\n    onSubmit: PropTypes.func.isRequired, // Ensure onSubmit is provided as a prop\n    handleClick: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"Input_inputContainer__QZk4R\",\"input\":\"Input_input__MJJzI\",\"inputCenter\":\"Input_inputCenter__pFBIS\",\"inputInfo\":\"Input_inputInfo__z+ueb\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\n\nimport styles from \"./Input.module.css\";\n\nexport default function Input({\n  type,\n  placeholder,\n  required,\n  variant = \"\",\n  className,\n  name,\n  handleChange,\n  width,\n  value,\n  paddingLeft,\n  autoComplete,\n  handleBlur,\n}) {\n  return (\n    <div style={{ width: width || \"auto\" }} className={styles.inputContainer}>\n      <input\n        autoComplete={autoComplete || \"off\"}\n        style={{ paddingLeft: paddingLeft || \"0px\" }}\n        onChange={handleChange}\n        name={name || \"\"}\n        className={clsx(\n          styles.input,\n          className,\n          variant === \"center\" ? styles.inputCenter : styles.input\n        )}\n        type={type || \"text\"}\n        placeholder={placeholder || \"\"}\n        required={required || false}\n        value={value || \"\"}\n        onBlur={handleBlur}\n      />\n    </div>\n  );\n}\n\nInput.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  paddingLeft: PropTypes.string,\n  autoComplete: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  name: PropTypes.string,\n  type: PropTypes.string,\n  variant: PropTypes.string,\n  handleChange: PropTypes.func,\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  placeholder: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n","import { createSelector } from \"reselect\";\n\n// Basic selector to get the slice of state\nconst selectPublicCalculatorState = (state) => state.publicCalculatorSlice;\n\n// Memoized selector for formData\nexport const selectFormData = createSelector(\n    [selectPublicCalculatorState],\n    (publicCalculatorSlice) => ({\n        height: publicCalculatorSlice.height,\n        age: publicCalculatorSlice.age,\n        currentWeight: publicCalculatorSlice.currentWeight,\n        desiredWeight: publicCalculatorSlice.desiredWeight,\n        bloodGroupIndex: publicCalculatorSlice.bloodGroupIndex,\n    })\n);\n\nexport const selectResult = (state) => state.publicCalculatorSlice.result;\nexport const selectLoading = (state) => state.publicCalculatorSlice.loading;\nexport const selectError = (state) => state.publicCalculatorSlice.error;\nexport const selectProducts = (state) => state.publicCalculatorSlice.products;\nexport const selectProduct = (state) => state.publicCalculatorSlice.product;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n    selectError,\n    selectFormData,\n    selectLoading,\n    selectResult,\n    selectProducts,\n    selectProduct,\n} from \"../redux/public/selectorsPublic\";\n\nexport const usePublic = () => {\n    const dispatch = useDispatch(); // Add dispatch for triggering actions\n    const formData = useSelector(selectFormData);\n    const isLoading = useSelector(selectLoading);\n    const errorPublic = useSelector(selectError);\n    const result = useSelector(selectResult);\n    const products = useSelector(selectProducts);\n    const product = useSelector(selectProduct);\n\n    return {\n        formData,\n        isLoading,\n        errorPublic,\n        result,\n        products,\n        product,\n        dispatch, // Include dispatch in the returned object\n    };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"HomePage_section__bINJC\",\"mobileHeaderCont\":\"HomePage_mobileHeaderCont__qjAb4\",\"modalHeader\":\"HomePage_modalHeader__hFCaA\",\"logoHeaderContainer\":\"HomePage_logoHeaderContainer__FJGuO\",\"mobileSubHeaderCont\":\"HomePage_mobileSubHeaderCont__fhrjH\",\"modalLogoutActionCenter\":\"HomePage_modalLogoutActionCenter__PZ-Up\",\"calories\":\"HomePage_calories__bU7nD\",\"line\":\"HomePage_line__e9H7+\",\"notEat\":\"HomePage_notEat__fKc2L\",\"list\":\"HomePage_list__99c8-\",\"link\":\"HomePage_link__-d+Of\",\"closeButton\":\"HomePage_closeButton__FJsvk\",\"closeModal\":\"HomePage_closeModal__7xn8T\",\"noScroll\":\"HomePage_noScroll__LbbLm\"};","import React, { useEffect, useRef } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\n\nimport { Outlet, Navigate, Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n\nimport Calculator from \"../../components/Calculator/Calculator\";\nimport { fetchCalculationData } from \"../../redux/public/operationsPublic\";\nimport Modal from \"../../components/commonComponents/Modal/Modal\";\n\nimport useToggle from \"../../hooks/useToggle\";\nimport Logo from \"../../components/Logo/Logo\";\nimport AuthLinks from \"../../components/AuthLinks/AuthLinks\";\nimport { usePublic } from \"../../hooks/usePublic\";\n\nimport Button from \"../../components/commonComponents/Button\";\nimport { HiX } from \"react-icons/hi\";\n\nimport Loader from '../../components/commonComponents/Loader'\n\nimport { resetForm } from '../../redux/public/publicCalculatorSlice'\n\nimport styles from \"./HomePage.module.css\";\n\nconst breakpoints = {\n    mobile: \"(max-width: 767px)\",\n    tablet: \"(min-width:768px)\",\n};\n\nexport default function HomePage() {\n    const [isCalculatorModalVisible, toggleIsCalculatorModalVisible] = useToggle(false);\n    const modalRef = useRef();\n\n    const { result } = usePublic()\n    // console.log(result?.recommendedDailyCaloriesIntake);\n\n\n    const location = useLocation();\n    const dispatch = useDispatch();\n\n    const isMobile = useMediaQuery({ query: breakpoints.mobile });\n    // const isTablet = useMediaQuery({ query: breakpoints.tablet });\n\n    useEffect(() => {\n        if (isCalculatorModalVisible) {\n            document.body.classList.add(styles.noScroll);\n        } else {\n            document.body.classList.remove(styles.noScroll);\n        }\n\n        const handleEscapeKey = (event) => {\n            if (event.key === \"Escape\") toggleIsCalculatorModalVisible();\n        };\n\n        document.addEventListener(\"keydown\", handleEscapeKey);\n\n        return () => {\n            document.body.classList.remove(styles.noScroll);\n            document.removeEventListener(\"keydown\", handleEscapeKey);\n        };\n    }, [isCalculatorModalVisible, toggleIsCalculatorModalVisible]);\n\n    const closeOnClickOutside = (event) => {\n        if (event.target !== event.currentTarget) {\n            toggleIsCalculatorModalVisible();\n        }\n    };\n\n    // Function to handle form submission\n    const handleSubmit = (formData) => {\n        dispatch(fetchCalculationData(formData));\n    };\n\n    // Redirect to CalculatorPage if `/home` is accessed\n    if (location.pathname === \"/home\") {\n        return <Navigate to=\"/home/calculator\" />;\n    }\n\n    function handleOpenModal() {\n        toggleIsCalculatorModalVisible()\n    }\n\n    return (\n        <section className={styles.section}>\n            {isCalculatorModalVisible && (\n                <div\n                    ref={modalRef}\n                    className={styles.modalOverlay}\n                    onClick={closeOnClickOutside}\n                >\n                    <div className={styles.modalContent}>\n                        <Modal\n                            closeButton={styles.closeButton}\n                            handleModalClose={toggleIsCalculatorModalVisible}\n                            isModalVisible={isCalculatorModalVisible}\n                        >\n                            {isMobile && (\n                                <div className={styles.mobileHeaderCont}>\n                                    <header className={styles.modalHeader}>\n                                        <Logo className={styles.logoHeaderContainer} />\n                                        <AuthLinks />\n                                    </header>\n                                    <div className={styles.mobileSubHeaderCont}>\n                                        <button onClick={toggleIsCalculatorModalVisible} className={styles.mobileHeaderExitButton}>\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"9\" viewBox=\"0 0 15 9\" fill=\"none\">\n                                                <path d=\"M14 1.5V4.5H2M2 4.5L5.5 1M2 4.5L5.5 8\" stroke=\"black\" strokeWidth=\"2\" />\n                                            </svg>\n                                        </button>\n                                    </div>\n                                </div>\n                            )}\n                            <div className={styles.modalLogoutActionCenter}>\n                                <button\n                                    className={styles.closeModal}\n                                    id=\"closeModal\"\n                                    onClick={toggleIsCalculatorModalVisible}\n                                >\n                                    <HiX size=\"16px\" />\n                                </button>\n                                {!result && isMobile && <Loader />}\n                                {result ? (\n                                    <>\n                                        <h2>Your recommended daily calorie intake is</h2>\n                                        <p className={styles.calories}>\n                                            {result?.recommendedDailyCaloriesIntake || \"N/A\"}\n                                            <span>kcal</span>\n                                        </p>\n                                        <div className={styles.line}></div>\n                                        <p className={styles.notEat}>Foods you should not eat</p>\n                                        <ol className={styles.list}>\n                                            {result?.data?.length > 0 ? (\n                                                result.data.map(item => (\n                                                    <li key={item._id}>{item.title}</li>\n                                                ))\n                                            ) : (\n                                                <p>No foods listed</p>\n                                            )}\n                                        </ol>\n                                        <Link className={styles.link} to=\"/login\">\n                                            <Button\n                                                handleClick={() => {\n                                                    toggleIsCalculatorModalVisible();\n                                                    dispatch(resetForm)\n                                                }}\n                                                type=\"button\"\n                                                variant=\"colored\"\n                                            >\n                                                Start losing weight\n                                            </Button>\n                                        </Link>\n                                    </>\n                                ) : (\n                                    <p>Loading your recommendations...</p>\n                                )}\n                            </div>\n                        </Modal>\n                    </div>\n                </div>\n            )}            {/* Pass handleSubmit as the onSubmit prop */}\n            <Calculator handleClick={handleOpenModal} onSubmit={handleSubmit} />\n            <Outlet />\n        </section>\n    );\n}\n"],"names":["bloodTypeOptions","value","label","WeightLossForm","_ref","_bloodTypeOptions$fin","onSubmit","handleClick","formData","isLoading","dispatch","usePublic","privateFormData","privateLoading","privateDispatch","usePrivate","isLoggedIn","useAuth","useEffect","setter","setAction","setPrivateFormData","setFormData","Object","entries","height","age","currentWeight","desiredWeight","bloodGroupIndex","forEach","_ref2","key","name","isValid","values","every","field","toString","trim","handleChange","e","target","loading","_jsxs","preventDefault","className","styles","form","children","formMainCont","formLeftCont","_jsx","Input","type","placeholder","required","formRightCont","bloodTypeContainer","find","opt","readOnly","radioGroup","map","option","React","id","checked","onChange","handleRadioChange","radioInput","htmlFor","radioLabel","Button","variant","disabled","Calculator","cont","title","width","paddingLeft","autoComplete","handleBlur","style","inputContainer","clsx","input","inputCenter","onBlur","selectFormData","createSelector","state","publicCalculatorSlice","selectResult","result","selectLoading","selectError","error","selectProducts","products","selectProduct","product","useDispatch","useSelector","errorPublic","breakpoints","mobile","tablet","HomePage","_result$data","isCalculatorModalVisible","toggleIsCalculatorModalVisible","useToggle","modalRef","useRef","location","useLocation","isMobile","useMediaQuery","query","document","body","classList","add","noScroll","remove","handleEscapeKey","event","addEventListener","removeEventListener","pathname","Navigate","to","section","ref","modalOverlay","onClick","currentTarget","modalContent","Modal","closeButton","handleModalClose","isModalVisible","mobileHeaderCont","modalHeader","Logo","logoHeaderContainer","AuthLinks","mobileSubHeaderCont","mobileHeaderExitButton","xmlns","viewBox","fill","d","stroke","strokeWidth","modalLogoutActionCenter","closeModal","HiX","size","Loader","_Fragment","calories","recommendedDailyCaloriesIntake","line","notEat","list","data","length","item","_id","Link","link","resetForm","fetchCalculationData","Outlet"],"sourceRoot":""}