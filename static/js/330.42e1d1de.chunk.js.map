{"version":3,"file":"static/js/330.42e1d1de.chunk.js","mappings":"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","sources":["webpack://health/./src/components/Calculator/Calculator.module.css?7770","webpack://health/./src/components/WeightLossForm/WeightLossForm.module.css?c660","components/WeightLossForm/WeightLossForm.jsx","components/Calculator/Calculator.jsx","webpack://health/./src/components/LoginStatistics/LoginStatistics.module.css?05df","components/LoginStatistics/LoginStatistics.jsx","webpack://health/./src/components/commonComponents/Input/Input.module.css?389e","components/commonComponents/Input/Input.jsx","redux/public/selectorsPublic.js","hooks/usePublic.js","webpack://health/./src/pages/CalculatorPage/CalculatorPage.module.css?9a12","pages/CalculatorPage/CalculatorPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cont\":\"Calculator_cont__DxRf1\",\"title\":\"Calculator_title__2m4T5\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"WeightLossForm_form__ZGw8f\",\"formMainCont\":\"WeightLossForm_formMainCont__SiX34\",\"formLeftCont\":\"WeightLossForm_formLeftCont__wBIH7\",\"formRightCont\":\"WeightLossForm_formRightCont__Mnwkz\",\"bloodTypeContainer\":\"WeightLossForm_bloodTypeContainer__3PR0Z\",\"label\":\"WeightLossForm_label__WWcYw\",\"radioGroup\":\"WeightLossForm_radioGroup__Jeuav\",\"radioInput\":\"WeightLossForm_radioInput__TgbuJ\",\"radioLabel\":\"WeightLossForm_radioLabel__4VqGE\",\"errorMessage\":\"WeightLossForm_errorMessage__duTiI\",\"link\":\"WeightLossForm_link__3FJdv\"};","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Input from \"../commonComponents/Input/Input\";\r\nimport Button from \"../commonComponents/Button\";\r\n\r\nimport { setFormData } from \"../../redux/public/publicCalculatorSlice\";\r\nimport { usePublic } from \"../../hooks/usePublic\";\r\n\r\nimport { setPrivateFormData } from '../../redux/private/privateSlice'\r\nimport { usePrivate } from \"../../hooks/usePrivate\";\r\n\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\n\r\nimport styles from \"./WeightLossForm.module.css\";\r\n\r\nconst bloodTypeOptions = [\r\n    { value: \"1\", label: \"A\" },\r\n    { value: \"2\", label: \"B\" },\r\n    { value: \"3\", label: \"AB\" },\r\n    { value: \"4\", label: \"O\" },\r\n];\r\n\r\nexport default function WeightLossForm({ onSubmit, handleClick }) {\r\n    const { formData = {}, isLoading, dispatch } = usePublic();\r\n    const { privateFormData = {}, privateLoading, privateDispatch } = usePrivate()\r\n    const { isLoggedIn } = useAuth()\r\n    // console.log(isLoggedIn);\r\n    // console.log(privateLoading);\r\n    // console.log(privateFormData);\r\n\r\n    // Initialize form state with default values\r\n    useEffect(() => {\r\n        const defaultValues = {\r\n            height: \"\",\r\n            age: \"\",\r\n            currentWeight: \"\",\r\n            desiredWeight: \"\",\r\n            bloodGroupIndex: \"\",\r\n        };\r\n\r\n        const setter = isLoggedIn ? privateDispatch : dispatch;\r\n        const setAction = isLoggedIn ? setPrivateFormData : setFormData;\r\n\r\n        Object.entries(defaultValues).forEach(([key, value]) => {\r\n            if (!isLoggedIn && !formData[key]) {\r\n                setter(setAction({ name: key, value }));\r\n            }\r\n            if (isLoggedIn && !privateFormData[key]) {\r\n                setter(setAction({ name: key, value }));\r\n            }\r\n        });\r\n    }, [dispatch, privateDispatch, formData, privateFormData, isLoggedIn]);\r\n\r\n    // console.log(formData);\r\n\r\n\r\n    // Check if all form fields are valid\r\n    const isValid = Object.values(isLoggedIn ? privateFormData : formData).every(\r\n        (field) => field?.toString().trim() !== \"\"\r\n    );\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        !isLoggedIn\r\n            ? dispatch(setFormData({ name, value }))\r\n            : privateDispatch(setPrivateFormData({ name, value }));\r\n    };\r\n\r\n    const handleRadioChange = (value) => {\r\n        !isLoggedIn\r\n            ? dispatch(setFormData({ name: \"bloodGroupIndex\", value }))\r\n            : privateDispatch(setPrivateFormData({ name: \"bloodGroupIndex\", value }));\r\n    };\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const dataToSubmit = isLoggedIn ? privateFormData : formData;\r\n        if (isValid) {\r\n            onSubmit(dataToSubmit);\r\n        }\r\n    };\r\n\r\n    const height = !isLoggedIn ? formData.height : privateFormData.height\r\n    const age = !isLoggedIn ? formData.age : privateFormData.age\r\n    const currentWeight = !isLoggedIn ? formData.currentWeight : privateFormData.currentWeight\r\n    const desiredWeight = !isLoggedIn ? formData.desiredWeight : privateFormData.desiredWeight\r\n    const bloodGroupIndex = !isLoggedIn ? formData.bloodGroupIndex : privateFormData.bloodGroupIndex\r\n    const loading = !isLoggedIn ? isLoading : privateLoading\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={styles.form}>\r\n\r\n\r\n            <div className={styles.formMainCont}>\r\n                {/* Left Section */}\r\n                <div className={styles.formLeftCont}>\r\n                    <Input\r\n                        type=\"number\"\r\n                        placeholder=\"Height*\"\r\n                        name=\"height\"\r\n                        value={height || \"\"}\r\n                        handleChange={handleChange}\r\n                        required\r\n                    />\r\n\r\n                    <Input\r\n                        type=\"number\"\r\n                        placeholder=\"Age*\"\r\n                        name=\"age\"\r\n                        value={age || \"\"}\r\n                        handleChange={handleChange}\r\n                        required\r\n                    />\r\n\r\n                    <Input\r\n                        type=\"number\"\r\n                        placeholder=\"Current weight*\"\r\n                        name=\"currentWeight\"\r\n                        value={currentWeight || \"\"}\r\n                        handleChange={handleChange}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                {/* Right Section */}\r\n                <div className={styles.formRightCont}>\r\n                    <Input\r\n                        type=\"number\"\r\n                        placeholder=\"Desired weight*\"\r\n                        name=\"desiredWeight\"\r\n                        value={desiredWeight || \"\"}\r\n                        handleChange={handleChange}\r\n                        required\r\n                    />\r\n\r\n                    <div className={styles.bloodTypeContainer}>\r\n                        <label className={styles.label}></label>\r\n\r\n                        {/* Read-Only Input */}\r\n                        <Input\r\n                            type=\"text\"\r\n                            placeholder=\"Blood type*\"\r\n                            name=\"bloodType\"\r\n                            value={bloodTypeOptions.find((opt) => opt.value === bloodGroupIndex)?.label || \"\"}\r\n                            handleChange={handleChange}\r\n                            required\r\n                            readOnly\r\n                        />\r\n\r\n                        {/* Radio Buttons */}\r\n                        <div className={styles.radioGroup}>\r\n                            {bloodTypeOptions.map((option) => (\r\n                                <React.Fragment key={option.value}>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        id={`bloodType-${option.value}`}\r\n                                        name=\"bloodType\"\r\n                                        value={option.value}\r\n                                        checked={bloodGroupIndex === option.value}\r\n                                        onChange={() => handleRadioChange(option.value)}\r\n                                        className={styles.radioInput}\r\n                                    />\r\n                                    <label htmlFor={`bloodType-${option.value}`} className={styles.radioLabel}>\r\n                                        {option.label}\r\n                                    </label>\r\n                                </React.Fragment>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Button handleClick={handleClick} type=\"submit\" variant=\"colored\" disabled={!isValid || loading}>\r\n                {loading ? \"Loading...\" : \"Start losing weight\"}\r\n            </Button>\r\n        </form>\r\n    );\r\n}\r\n\r\nWeightLossForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n    handleClick: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./Calculator.module.css\";\r\nimport WeightLossForm from \"../WeightLossForm/WeightLossForm\";\r\n\r\nexport default function Calculator({ onSubmit, handleClick }) {\r\n    return (\r\n        <div className={styles.cont}>\r\n            <h2 className={styles.title}>\r\n                Calculate your daily calorie intake right now\r\n            </h2>\r\n\r\n            <WeightLossForm handleClick={handleClick} onSubmit={onSubmit} />\r\n        </div>\r\n    );\r\n}\r\n\r\nCalculator.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired, // Ensure onSubmit is provided as a prop\r\n    handleClick: PropTypes.func,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"resultsCont\":\"LoginStatistics_resultsCont__eZkZs\",\"statisticCont\":\"LoginStatistics_statisticCont__D9Sjd\",\"resultsToday\":\"LoginStatistics_resultsToday__rk4TC\",\"statisticList\":\"LoginStatistics_statisticList__MLGrM\",\"statisticListItem\":\"LoginStatistics_statisticListItem__a6CAh\",\"statisticListItemSpan\":\"LoginStatistics_statisticListItemSpan__7dhsr\",\"notRecommendedCont\":\"LoginStatistics_notRecommendedCont__6i5Qu\",\"notRecommendedTitle\":\"LoginStatistics_notRecommendedTitle__F271m\",\"notRecommendedList\":\"LoginStatistics_notRecommendedList__nFW93\",\"notRecommendedEmpty\":\"LoginStatistics_notRecommendedEmpty__JJa4Y\",\"statisticSuperCont\":\"LoginStatistics_statisticSuperCont__Y6qSl\",\"notRecommendedListItem\":\"LoginStatistics_notRecommendedListItem__wA54x\"};","import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport UserLogout from '../UserLogout/UserLogout';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport { usePrivate } from '../../hooks/usePrivate';\r\n\r\nimport styles from './LoginStatistics.module.css'\r\n\r\nconst breakpoints = {\r\n    mobile: \"(max-width: 767px)\",\r\n    tablet: \"(min-width:768px)\",\r\n    desktop: \"(min-width:1024px)\",\r\n};\r\n\r\nfunction LoginStatistics({ day }) {\r\n    const isDesktop = useMediaQuery({ query: breakpoints.desktop });\r\n    const { user } = useAuth()\r\n    const { dailyCalorieSummary } = usePrivate()\r\n\r\n    // Validate the format dd-mm-yyyy\r\n    const isValidDate = /^\\d{2}.\\d{2}.\\d{4}$/.test(day);\r\n    if (!isValidDate) {\r\n        console.error(`Invalid date format: ${day}. Expected dd.mm.yyyy.`);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.resultsCont}>\r\n            {isDesktop && <UserLogout />}\r\n            <div className={styles.statisticSuperCont}>\r\n                <div className={styles.statisticCont}>\r\n                    <p className={styles.resultsToday}>Summary for {day}</p>\r\n                    <ul className={styles.statisticList}>\r\n                        <li key=\"left\" className={styles.statisticListItem}>\r\n                            <span className={styles.statisticListItemSpan}>\r\n                                Left\r\n                            </span>\r\n                            <span className={styles.statisticListItemSpan}>\r\n                                {dailyCalorieSummary?.remainingCalories !== 0 ? dailyCalorieSummary.remainingCalories : '000'} kcal\r\n                            </span>\r\n                        </li>\r\n                        <li key=\"consumed\" className={styles.statisticListItem}>\r\n                            <span className={styles.statisticListItemSpan}>\r\n                                Consumed\r\n                            </span>\r\n                            <span className={styles.statisticListItemSpan}>\r\n                                {dailyCalorieSummary?.totalCaloriesConsumed > 0 ? dailyCalorieSummary.totalCaloriesConsumed : '000'} kcal\r\n                            </span>\r\n                        </li>\r\n                        <li key=\"daily\" className={styles.statisticListItem}>\r\n                            <span className={styles.statisticListItemSpan}>\r\n                                Daily rate\r\n                            </span>\r\n                            <span className={styles.statisticListItemSpan}>\r\n                                {dailyCalorieSummary?.dailyCalorieIntake > 0 ? dailyCalorieSummary.dailyCalorieIntake : '000'} kcal\r\n                            </span>                    </li>\r\n                        <li key=\"normal\" className={styles.statisticListItem}>\r\n                            <span className={styles.statisticListItemSpan}>\r\n                                n% of normal\r\n                            </span>\r\n                            <span className={styles.statisticListItemSpan}>\r\n                                {dailyCalorieSummary?.percentageCaloriesConsumed > 0 ? dailyCalorieSummary.percentageCaloriesConsumed : '0'} %\r\n                            </span>                    </li>\r\n                    </ul>\r\n                </div>\r\n                <div className={styles.notRecommendedCont}>\r\n                    <p className={styles.notRecommendedTitle}>\r\n                        Food not recommended\r\n                    </p>\r\n                    {user?.dietaryInfo?.restrictedAliments?.length > 0 ? (\r\n                        <ul className={styles.notRecommendedList}>\r\n                            {user.dietaryInfo.restrictedAliments.map((aliment) => (\r\n                                <li key={aliment?._id} className={styles.notRecommendedListItem}>\r\n                                    {aliment.title}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    ) : (\r\n                        <p className={styles.notRecommendedEmpty}>\r\n                            Your diet will be displayed here\r\n                        </p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nLoginStatistics.propTypes = {\r\n    day: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default LoginStatistics;","// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"Input_inputContainer__hOC7a\",\"input\":\"Input_input__1YKG2\",\"inputCenter\":\"Input_inputCenter__eBcCf\",\"inputInfo\":\"Input_inputInfo__-HLSG\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\n\r\nimport styles from \"./Input.module.css\";\r\n\r\nexport default function Input({\r\n  type,\r\n  placeholder,\r\n  required,\r\n  variant = \"\",\r\n  className,\r\n  name,\r\n  handleChange,\r\n  width,\r\n  value,\r\n  paddingLeft,\r\n  autoComplete,\r\n  handleBlur,\r\n}) {\r\n  return (\r\n    <div style={{ width: width || \"auto\" }} className={styles.inputContainer}>\r\n      <input\r\n        autoComplete={autoComplete || \"off\"}\r\n        style={{ paddingLeft: paddingLeft || \"0px\" }}\r\n        onChange={handleChange}\r\n        name={name || \"\"}\r\n        className={clsx(\r\n          styles.input,\r\n          className,\r\n          variant === \"center\" ? styles.inputCenter : styles.input\r\n        )}\r\n        type={type || \"text\"}\r\n        placeholder={placeholder || \"\"}\r\n        required={required || false}\r\n        value={value || \"\"}\r\n        onBlur={handleBlur}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nInput.propTypes = {\r\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  paddingLeft: PropTypes.string,\r\n  autoComplete: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  name: PropTypes.string,\r\n  type: PropTypes.string,\r\n  variant: PropTypes.string,\r\n  handleChange: PropTypes.func,\r\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  placeholder: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n};\r\n","import { createSelector } from \"reselect\";\r\n\r\n// Basic selector to get the slice of state\r\nconst selectPublicCalculatorState = (state) => state.publicCalculatorSlice;\r\n\r\n// Memoized selector for formData\r\nexport const selectFormData = createSelector(\r\n    [selectPublicCalculatorState],\r\n    (publicCalculatorSlice) => ({\r\n        height: publicCalculatorSlice.height,\r\n        age: publicCalculatorSlice.age,\r\n        currentWeight: publicCalculatorSlice.currentWeight,\r\n        desiredWeight: publicCalculatorSlice.desiredWeight,\r\n        bloodGroupIndex: publicCalculatorSlice.bloodGroupIndex,\r\n    })\r\n);\r\n\r\nexport const selectResult = (state) => state.publicCalculatorSlice.result;\r\nexport const selectLoading = (state) => state.publicCalculatorSlice.loading;\r\nexport const selectError = (state) => state.publicCalculatorSlice.error;\r\nexport const selectProducts = (state) => state.publicCalculatorSlice.products;\r\nexport const selectProduct = (state) => state.publicCalculatorSlice.product;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    selectError,\r\n    selectFormData,\r\n    selectLoading,\r\n    selectResult,\r\n    selectProducts,\r\n    selectProduct,\r\n} from \"../redux/public/selectorsPublic\";\r\n\r\nexport const usePublic = () => {\r\n    const dispatch = useDispatch(); // Add dispatch for triggering actions\r\n    const formData = useSelector(selectFormData);\r\n    const isLoading = useSelector(selectLoading);\r\n    const errorPublic = useSelector(selectError);\r\n    const result = useSelector(selectResult);\r\n    const products = useSelector(selectProducts);\r\n    const product = useSelector(selectProduct);\r\n\r\n    return {\r\n        formData,\r\n        isLoading,\r\n        errorPublic,\r\n        result,\r\n        products,\r\n        product,\r\n        dispatch, // Include dispatch in the returned object\r\n    };\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"CalculatorPage_section__0hkff\",\"calculatorCont\":\"CalculatorPage_calculatorCont__o9xCl\",\"errorMessage\":\"CalculatorPage_errorMessage__fkqqX\",\"leftCont\":\"CalculatorPage_leftCont__F-Q6n\"};","import React, { useEffect } from 'react'\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport Calculator from '../../components/Calculator/Calculator';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { fetchPrivateCalculationData, fetchConsumedProductsForSpecificDay } from '../../redux/private/operationsPrivate'\r\n\r\nimport Logo from '../../components/Logo/Logo';\r\nimport NavLinks from '../../components/NavLinks/NavLinks';\r\n\r\nimport LoginStatistics from '../../components/LoginStatistics/LoginStatistics';\r\nimport { usePrivate } from '../../hooks/usePrivate';\r\n\r\nimport { logOut } from '../../redux/auth/operationsAuth';\r\nimport { useAuth } from '../../hooks/useAuth';\r\n\r\nimport styles from './CalculatorPage.module.css'\r\n\r\nconst breakpoints = {\r\n    mobile: \"(max-width: 767px)\",\r\n    tablet: \"(min-width:768px)\",\r\n    desktop: \"(min-width:1024px)\",\r\n};\r\n\r\nexport default function CalculatorPage() {\r\n    useLocation();\r\n\r\n    const { isLoggedIn } = useAuth()\r\n    const { error, privateDispatch } = usePrivate()\r\n\r\n    const isDesktop = useMediaQuery({ query: breakpoints.desktop });\r\n\r\n    const thisDispatch = useDispatch()\r\n    const navigate = useNavigate();\r\n\r\n    const today = getFormattedDate()\r\n\r\n    useEffect(() => {\r\n        const today = getFormattedDate(); // Ensure the correct format YYYY-MM-DD\r\n        // console.log(\"Fetching data for date:\", today);\r\n\r\n        privateDispatch(fetchConsumedProductsForSpecificDay({ date: today })); // Pass as an object\r\n    }, [privateDispatch]);\r\n\r\n    useEffect(() => {\r\n        if (error === \"Not authorized\") {\r\n            const timeout = setTimeout(() => {\r\n                thisDispatch(logOut());\r\n                navigate(\"/login\");\r\n            }, 5000);\r\n\r\n            return () => clearTimeout(timeout); // Cleanup timeout\r\n        }\r\n    }, [error, isLoggedIn, thisDispatch, navigate]);\r\n\r\n\r\n    function getFormattedDate() {\r\n        const today = new Date();\r\n        const year = today.getFullYear();\r\n        const month = String(today.getMonth() + 1).padStart(2, '0'); // Add leading zero if needed\r\n        const day = String(today.getDate()).padStart(2, '0'); // Add leading zero if needed\r\n        return `${year}-${month}-${day}`; // Return in YYYY-MM-DD format\r\n    }\r\n\r\n    const handleClick = () => {\r\n        privateDispatch(fetchConsumedProductsForSpecificDay({ date: today })); // Pass as an object\r\n        // dispatch(refreshUser())\r\n    }\r\n\r\n\r\n    // console.log(getFormattedDate());\r\n\r\n    // Function to handle form submission\r\n    const handleSubmit = (formData) => {\r\n        privateDispatch(fetchPrivateCalculationData(formData));\r\n    };\r\n\r\n    function formatToDisplayDate(date) {\r\n        const [year, month, day] = date.split(\"-\");\r\n        return `${day}.${month}.${year}`;\r\n    }\r\n\r\n    function handleProductsForSelectedDate(date) {\r\n        setTimeout(() => {\r\n            privateDispatch(fetchConsumedProductsForSpecificDay({ date: date }));\r\n        }, 1000); // Delay of 500ms\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <section className={styles.section}>\r\n            {(error || !isLoggedIn) && <div className={styles.errorMessage}>{(error === 'Not authorized') ? <div className={styles.errorMessage}>\r\n                <p>\r\n                    For reasons of personal data security Your authorisation has expired ! We will shortly redirect You to your login page. If you want to continue Please Login again ! Thank You for understanding !\r\n                </p>\r\n            </div> : error}\r\n            </div>}\r\n\r\n            <div className={styles.calculatorCont}>\r\n                {isDesktop && (<div className={styles.leftCont}>\r\n                    <Logo />\r\n                    <NavLinks />\r\n                </div>)}\r\n                <Calculator handleClick={() => {\r\n                    handleClick();\r\n                    handleSubmit();\r\n                    handleProductsForSelectedDate(today)\r\n                }} onSubmit={handleSubmit} />\r\n            </div>\r\n            <LoginStatistics day={formatToDisplayDate(today)} />\r\n        </section>\r\n    )\r\n}\r\n"],"names":["bloodTypeOptions","value","label","WeightLossForm","_ref","_bloodTypeOptions$fin","onSubmit","handleClick","formData","isLoading","dispatch","usePublic","privateFormData","privateLoading","privateDispatch","usePrivate","isLoggedIn","useAuth","useEffect","setter","setAction","setPrivateFormData","setFormData","Object","entries","height","age","currentWeight","desiredWeight","bloodGroupIndex","forEach","_ref2","key","name","isValid","values","every","field","toString","trim","handleChange","e","target","loading","_jsxs","preventDefault","className","styles","form","children","formMainCont","formLeftCont","_jsx","Input","type","placeholder","required","formRightCont","bloodTypeContainer","find","opt","readOnly","radioGroup","map","option","React","id","checked","onChange","handleRadioChange","radioInput","htmlFor","radioLabel","Button","variant","disabled","Calculator","cont","title","breakpoints","_user$dietaryInfo","_user$dietaryInfo$res","day","isDesktop","useMediaQuery","query","user","dailyCalorieSummary","test","console","error","UserLogout","remainingCalories","totalCaloriesConsumed","dailyCalorieIntake","percentageCaloriesConsumed","dietaryInfo","restrictedAliments","length","aliment","_id","width","paddingLeft","autoComplete","handleBlur","style","inputContainer","clsx","input","inputCenter","onBlur","selectFormData","createSelector","state","publicCalculatorSlice","selectResult","result","selectLoading","selectError","selectProducts","products","selectProduct","product","useDispatch","useSelector","errorPublic","mobile","tablet","desktop","CalculatorPage","useLocation","thisDispatch","navigate","useNavigate","today","getFormattedDate","Date","getFullYear","String","getMonth","padStart","getDate","fetchConsumedProductsForSpecificDay","date","timeout","setTimeout","logOut","clearTimeout","handleSubmit","fetchPrivateCalculationData","section","errorMessage","calculatorCont","leftCont","Logo","NavLinks","LoginStatistics","year","month","split","formatToDisplayDate"],"sourceRoot":""}