{"version":3,"file":"static/js/425.7976e157.chunk.js","mappings":"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","sources":["webpack://health/./src/components/commonComponents/Input/Input.module.css?389e","components/commonComponents/Input/Input.jsx","hooks/useFormTouched.js","hooks/useFormValidation.js","hooks/validateRegister.js","hooks/usePasswordStrength.js","webpack://health/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","webpack://health/./src/pages/RegisterPage/RegisterPage.module.css?fdcb","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"Input_inputContainer__QZk4R\",\"input\":\"Input_input__MJJzI\",\"inputCenter\":\"Input_inputCenter__pFBIS\",\"inputInfo\":\"Input_inputInfo__z+ueb\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\n\nimport styles from \"./Input.module.css\";\n\nexport default function Input({\n  type,\n  placeholder,\n  required,\n  variant = \"\",\n  className,\n  name,\n  handleChange,\n  width,\n  value,\n  paddingLeft,\n  autoComplete,\n  handleBlur,\n}) {\n  return (\n    <div style={{ width: width || \"auto\" }} className={styles.inputContainer}>\n      <input\n        autoComplete={autoComplete || \"off\"}\n        style={{ paddingLeft: paddingLeft || \"0px\" }}\n        onChange={handleChange}\n        name={name || \"\"}\n        className={clsx(\n          styles.input,\n          className,\n          variant === \"center\" ? styles.inputCenter : styles.input\n        )}\n        type={type || \"text\"}\n        placeholder={placeholder || \"\"}\n        required={required || false}\n        value={value || \"\"}\n        onBlur={handleBlur}\n      />\n    </div>\n  );\n}\n\nInput.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  paddingLeft: PropTypes.string,\n  autoComplete: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  name: PropTypes.string,\n  type: PropTypes.string,\n  variant: PropTypes.string,\n  handleChange: PropTypes.func,\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  placeholder: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n","import { useState } from \"react\";\n\nconst useFormTouched = (initialState = {}) => {\n  const [touched, setTouched] = useState(\n    Object.keys(initialState).reduce((acc, key) => {\n      acc[key] = false;\n      return acc;\n    }, {})\n  );\n\n  const handleBlur = (field) => () => {\n    setTouched((prev) => ({ ...prev, [field]: true }));\n  };\n\n  return {\n    touched,\n    handleBlur,\n  };\n};\n\nexport default useFormTouched;\n","import { useState } from \"react\";\n\nconst useFormValidation = (initialState, validateFn) => {\n  const [fields, setFields] = useState(initialState);\n  const [errors, setErrors] = useState({});\n\n  const validateFields = () => {\n    const newErrors = validateFn(fields);\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  return {\n    fields,\n    setFields,\n    errors,\n    validateFields,\n  };\n};\n\nexport default useFormValidation;\n","const validateRegister = (fields) => {\n    const newErrors = {};\n    if (!fields.username) {\n        newErrors.username = \"Username is required\";\n    }\n    if (fields.password.length < 6) {\n        newErrors.password = \"Password must be at least 6 characters!\";\n    }\n    if (!fields.email) {\n        newErrors.email = \"Email is required\";\n    }\n    if (!fields.password) {\n        newErrors.password = \"Password is required\";\n    }\n\n    return newErrors;\n};\n\nexport default validateRegister;\n","import { useState, useEffect } from \"react\";\n\nconst usePasswordStrength = (password) => {\n  const [strength, setStrength] = useState(0);\n\n  useEffect(() => {\n    const calculatePasswordStrength = (password) => {\n      let strength = 0;\n\n      if (password.length > 7) strength += 1;\n      if (password.length > 10) strength += 1;\n      if (/[A-Z]/.test(password)) strength += 1;\n      if (/[0-9]/.test(password)) strength += 1;\n      if (/[^A-Za-z0-9]/.test(password)) strength += 1;\n\n      return strength;\n    };\n\n    setStrength(calculatePasswordStrength(password));\n  }, [password]);\n\n  return strength;\n};\n\nexport default usePasswordStrength;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__Tv43W\",\"input\":\"RegisterForm_input__FsgBz\",\"inputs\":\"RegisterForm_inputs__Wb7ho\",\"inputWrapper\":\"RegisterForm_inputWrapper__63Rq3\",\"inputError\":\"RegisterForm_inputError__c6zsh\",\"inputIcon\":\"RegisterForm_inputIcon__TwsvE\",\"eyeIcon\":\"RegisterForm_eyeIcon__PZ59+\",\"error\":\"RegisterForm_error__yDHjz\",\"buttonsContainer\":\"RegisterForm_buttonsContainer__WBAxD\",\"passwordStrengthBar\":\"RegisterForm_passwordStrengthBar__1CK-9\",\"passwordStrengthIndicator\":\"RegisterForm_passwordStrengthIndicator__Ce9Eh\"};","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { register } from \"../../redux/auth/operationsAuth\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope, faLock, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport Input from \"../commonComponents/Input/Input\";\nimport Button from \"../commonComponents/Button\";\nimport useToggle from \"../../hooks/useToggle\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { VscEye, VscEyeClosed } from \"react-icons/vsc\";\nimport useFormValidation from \"../../hooks/useFormValidation\";\nimport validateRegister from \"../../hooks/validateRegister\";\nimport useFormTouched from \"../../hooks/useFormTouched\";\nimport usePasswordStrength from \"../../hooks/usePasswordStrength\";\nimport styles from \"./RegisterForm.module.css\";\n\nfunction RegisterForm() {\n  const { fields, setFields, validateFields } = useFormValidation(\n    {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      passwordConfirm: \"\",\n    },\n    validateRegister\n  );\n\n  const { touched, handleBlur } = useFormTouched();\n  const passwordStrength = usePasswordStrength(fields.password);\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const [type, setType] = useState(\"password\");\n  const [eyeVisible, toggleEyeVisible] = useToggle(true);\n  const [closedEyeVisible, toggleClosedEyeVisible] = useToggle(false);\n\n  const [confirmType, setConfirmType] = useState(\"password\");\n  const [confirmEyeVisible, toggleConfirmEyeVisible] = useToggle(true);\n  const [confirmClosedEyeVisible, toggleConfirmClosedEyeVisible] =\n    useToggle(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!validateFields()) return;\n\n    const { passwordConfirm, ...fieldsWithoutPasswordConfirm } = fields;\n\n    dispatch(register(fieldsWithoutPasswordConfirm))\n      .unwrap()\n      .then(() => {\n        setFields({\n          username: \"\",\n          email: \"\",\n          password: \"\",\n          passwordConfirm: \"\",\n        });\n        toast.success(\"Registration successful!\");\n      })\n      .catch((err) => {\n        console.error(err);\n        setErrorMessage(\"Account with this email already exists.\");\n        toast.error(\"Account with this email already exists.\");\n      });\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <div className={styles.inputs}>\n        <div className={styles.inputContainer}>\n          <div className={styles.inputWrapper}>\n            <FontAwesomeIcon icon={faUser} className={styles.inputIcon} />\n\n            <Input\n              autoComplete=\"on\"\n              paddingLeft=\"53.5px\"\n              width=\"100%\"\n              type={\"text\"}\n              value={fields.username}\n              handleChange={(e) => {\n                setFields({ ...fields, username: e.target.value });\n              }}\n              handleBlur={handleBlur(\"username\")}\n              placeholder=\"Name\"\n              required={true}\n            />\n          </div>\n          {touched.username && !fields.username && (\n            <p className={styles.inputError}>Required</p>\n          )}\n        </div>\n        <div className={styles.inputContainer}>\n          <div className={styles.inputWrapper}>\n            <FontAwesomeIcon icon={faEnvelope} className={styles.inputIcon} />\n\n            <Input\n              autoComplete=\"on\"\n              paddingLeft=\"53.5px\"\n              width=\"100%\"\n              type=\"email\"\n              value={fields.email}\n              handleChange={(e) => {\n                setFields({ ...fields, email: e.target.value });\n              }}\n              handleBlur={handleBlur(\"email\")}\n              placeholder=\"E-mail\"\n              required={true}\n            />\n          </div>\n          {touched.email && !fields.email && (\n            <p className={styles.inputError}>Required</p>\n          )}\n        </div>\n        <div className={styles.inputContainer}>\n          <div className={styles.inputWrapper}>\n            <FontAwesomeIcon icon={faLock} className={styles.inputIcon} />\n\n            {eyeVisible && (\n              <VscEye\n                onClick={() => {\n                  toggleEyeVisible();\n                  toggleClosedEyeVisible();\n                  setType(\"text\");\n                }}\n                size=\"24px\"\n                className={styles.eyeIcon}\n              />\n            )}\n\n            {closedEyeVisible && (\n              <VscEyeClosed\n                onClick={() => {\n                  toggleEyeVisible();\n                  toggleClosedEyeVisible();\n                  setType(\"password\");\n                }}\n                size=\"24px\"\n                className={styles.eyeIcon}\n              />\n            )}\n\n            <Input\n              autoComplete=\"on\"\n              paddingLeft=\"53.5px\"\n              width=\"100%\"\n              type={type}\n              value={fields.password}\n              handleChange={(e) => {\n                setFields({ ...fields, password: e.target.value });\n              }}\n              handleBlur={handleBlur(\"password\")}\n              placeholder=\"Password\"\n              required={true}\n            />\n          </div>\n          {touched.password && !fields.password && (\n            <p className={styles.inputError}>Required</p>\n          )}\n        </div>\n        <div className={styles.inputContainer}>\n          <div className={styles.inputWrapper}>\n            <FontAwesomeIcon icon={faLock} className={styles.inputIcon} />\n\n            {confirmEyeVisible && (\n              <VscEye\n                onClick={() => {\n                  toggleConfirmEyeVisible();\n                  toggleConfirmClosedEyeVisible();\n                  setConfirmType(\"text\");\n                }}\n                size=\"24px\"\n                className={styles.eyeIcon}\n              />\n            )}\n\n            {confirmClosedEyeVisible && (\n              <VscEyeClosed\n                onClick={() => {\n                  toggleConfirmEyeVisible();\n                  toggleConfirmClosedEyeVisible();\n                  setConfirmType(\"password\");\n                }}\n                size=\"24px\"\n                className={styles.eyeIcon}\n              />\n            )}\n\n            <Input\n              autoComplete=\"on\"\n              paddingLeft=\"53.5px\"\n              width=\"100%\"\n              type={confirmType}\n              value={fields.passwordConfirm}\n              handleChange={(e) =>\n                setFields({ ...fields, passwordConfirm: e.target.value })\n              }\n              handleBlur={handleBlur(\"passwordConfirm\")}\n              placeholder=\"Confirm Password\"\n              required={true}\n            />\n          </div>\n          {touched.passwordConfirm && !fields.passwordConfirm && (\n            <p className={styles.inputError}>Required</p>\n          )}\n          {touched.passwordConfirm &&\n            fields.password !== fields.passwordConfirm && (\n              <p className={styles.inputError}>Passwords must match</p>\n            )}\n        </div>\n        <div className={styles.passwordStrengthBar}>\n          <div\n            className={styles.passwordStrengthIndicator}\n            style={{\n              width: `${(passwordStrength / 5) * 100}%`,\n              backgroundColor:\n                passwordStrength < 3\n                  ? \"red\"\n                  : passwordStrength < 4\n                  ? \"orange\"\n                  : \"green\",\n            }}\n          ></div>\n        </div>\n      </div>\n\n      <div className={styles.buttonsContainer}>\n        <Button variant=\"colored\" type=\"submit\">\n          Register\n        </Button>\n        {errorMessage && <p className={styles.error}>{errorMessage}</p>}\n        <Link to=\"/login\" className={styles.navLink}>\n          <Button type=\"button\">Log in</Button>\n        </Link>{\" \"}\n        <ToastContainer position=\"top-center\" autoClose={5000} />\n      </div>\n    </form>\n  );\n}\n\nexport default RegisterForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"RegisterPage_section__GPz-D\",\"title\":\"RegisterPage_title__Yjy6g\"};","import React from 'react'\nimport RegisterForm from '../../components/RegisterForm/RegisterForm'\n\nimport styles from './RegisterPage.module.css'\n\nexport default function RegisterPage() {\n    return (\n        <section className={styles.section}>\n            <h2 className={styles.title}>Register</h2>\n            <RegisterForm />\n        </section>\n    )\n}\n"],"names":["Input","_ref","type","placeholder","required","variant","className","name","handleChange","width","value","paddingLeft","autoComplete","handleBlur","_jsx","style","styles","inputContainer","children","onChange","clsx","input","inputCenter","onBlur","initialState","arguments","length","undefined","touched","setTouched","useState","Object","keys","reduce","acc","key","field","prev","useFormValidation","validateFn","fields","setFields","errors","setErrors","validateFields","newErrors","username","password","email","strength","setStrength","useEffect","test","calculatePasswordStrength","passwordConfirm","validateRegister","useFormTouched","passwordStrength","usePasswordStrength","errorMessage","setErrorMessage","dispatch","useDispatch","setType","eyeVisible","toggleEyeVisible","useToggle","closedEyeVisible","toggleClosedEyeVisible","confirmType","setConfirmType","confirmEyeVisible","toggleConfirmEyeVisible","confirmClosedEyeVisible","toggleConfirmClosedEyeVisible","_jsxs","form","onSubmit","e","preventDefault","fieldsWithoutPasswordConfirm","register","unwrap","then","toast","success","catch","err","console","error","inputs","inputWrapper","FontAwesomeIcon","icon","faUser","inputIcon","target","inputError","faEnvelope","faLock","VscEye","onClick","size","eyeIcon","VscEyeClosed","passwordStrengthBar","passwordStrengthIndicator","backgroundColor","buttonsContainer","Button","Link","to","navLink","ToastContainer","position","autoClose","RegisterPage","section","title","RegisterForm"],"sourceRoot":""}